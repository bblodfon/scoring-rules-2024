{
  "hash": "bbbdd3107c2cd4030613a2963f435359",
  "result": {
    "markdown": "---\ntitle: \"Benchmark results analysis\"\nauthor: \"[John Zobolas](https://github.com/bblodfon)\"\ndate: last-modified\ndescription: \"Explore the relationship between proper and improper Integrated Brier Score in the validation of survival models\"\nbibliography: references.bib\nformat:\n  html:\n    date: last-modified\n    code-block-bg: true\n    code-copy: true\n    code-fold: true\n    code-overflow: wrap\n    code-block-border-left: true\n    toc: true\n    toc-location: left\n    html-math-method: katex\n    page-layout: full\nexecute:\n  freeze: true\n---\n\n\n\n\n## Aim {-}\n\nWe benchmark the two versions of the survival brier score  [@Graf1999], namely the **Integrated Survival Brier Score (ISBS)** and the proposed **re-weighted version (RISBS)** (see [documentation details](https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.graf.html#details) for their respective formulas).\nThe first (ISBS) is not a proper scoring rule [@Rindt2022], the second (RISBS) is [@Sonabend2024].\nOur goal is to assess whether these scores exhibit differences in simulated and real-world datasets, and if so, to understand the reasons behind these differences.\n\nLoad libraries:\n\n::: {.cell result='false'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(mlr3proba)\nlibrary(DT)\nlibrary(ggpubr)\nlibrary(ComplexHeatmap)\nlibrary(circlize)\n```\n:::\n\n\n## Simulated Data Results {-}\n\n:::{.callout-note}\n- [Code](https://github.com/survival-org/scoring-rules-2024/blob/main/generate.R) to generate the simulated datasets.\nFor directly getting the `res.rds` object, contact the author via a GitHub issue.\n\nWe simulate datasets with **varying characteristics**:\n\n1. Independent (random) vs dependent censoring\n2. PH (Proportional Hazards) vs non-PH data (time-varying coefficients)\n3. Proportion of censoring ($10\\% - 80\\%$)\n4. Number of observations ($100 - 1000$)\n\nThe 'fixed' parameters in our simulations are the following:\n\n- Time horizon (max event or censoring time): **365 days**\n- Number of datasets to generate per (1)-(4) combinations: $100$\n- Number of covariates per dataset (chosen randomly): $3-10$ (low-dim setting)\n:::\n\n### Introduction {-}\n\nFor each simulated dataset, we performed a simple train/test resampling (70%/30%).\nEach resampling was stratified using the `status` variable so that the proportion of censoring remains the same in each respective train and test set.\n\nWe trained 3 models in each respective train set, namely the **Kaplan-Meier**, the **Cox Proportional Hazards** (CoxPH) model and an **Accelerated Failure Time** (AFT) model with Weibull distribution for the time-to-event output variable.\nWe tested the performance of each model in each respective test set using the **ISBS** and **RISBS** measures, integrating up to the $80\\%$ quantile of the event times of each train set.\n\nGet the benchmark results:\n\n::: {.cell hash='index_cache/html/unnamed-chunk-2_0f404c7806ce1a1de54764d615d3f0af'}\n\n```{.r .cell-code}\nres = readRDS(file = \"res.rds\")\n```\n:::\n\n\n:::{.callout-tip title=\"Organization of Results\"}\nWe will divide the presentation of simulation data results in **4 sub-sections**, according to: \n\n1. Whether the simulated datasets were satisfying the proportional hazards assumption and \n2. Whether censoring was dependent or not from the survival outcome.\n:::\n\n### Prop. Hazards and Independent Censoring {-}\n\nFor each combo of number of observations (`n_obs`) and proportion of censoring (`cens_prop`) variables ($100$ simulated datasets per combo), we calculate the following summary stats between RISBS and ISBS: **Pearson correlation**, **mean absolute difference** and its standard deviation, **root mean square error (RMSE)**:\n\n::: {.cell}\n\n```{.r .cell-code}\nres_ph_ind = \n  res |> \n  drop_na() |> # exclude few datasets where AFT prediction didn't work\n  filter(prop_haz == TRUE, cens_dep == FALSE) |>\n  group_by(n_obs, cens_prop) |>\n  summarize(\n    .groups = \"drop\",\n    km_cor  = cor(km_proper, km_improper),\n    cox_cor = cor(cox_proper, cox_improper),\n    aft_cor = cor(aft_proper, aft_improper),\n    km_diff_mean  = mean(abs(km_proper - km_improper)),\n    cox_diff_mean = mean(abs(cox_proper - cox_improper)),\n    aft_diff_mean = mean(abs(aft_proper - aft_improper)),\n    km_diff_sd    = sd(abs(km_proper - km_improper)),\n    cox_diff_sd   = sd(abs(cox_proper - cox_improper)),\n    aft_diff_sd   = sd(abs(aft_proper - aft_improper)),\n    km_rmse  = sqrt(mean((km_proper - km_improper)^2)),\n    cox_rmse = sqrt(mean((cox_proper - cox_improper)^2)),\n    aft_rmse = sqrt(mean((aft_proper - aft_improper)^2))\n)\n\nres_ph_ind |>\n  datatable(\n    rownames = FALSE,\n    options = list(pageLength = 10, searching = TRUE)) |>\n  formatRound(columns = 2:14, digits = c(1, rep(2,3), rep(3,9)))\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-1fadcbc773a5ad4d459a\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-1fadcbc773a5ad4d459a\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[100,100,100,100,100,100,100,100,200,200,200,200,200,200,200,200,300,300,300,300,300,300,300,300,400,400,400,400,400,400,400,400,500,500,500,500,500,500,500,500,600,600,600,600,600,600,600,600,700,700,700,700,700,700,700,700,800,800,800,800,800,800,800,800,900,900,900,900,900,900,900,900,1000,1000,1000,1000,1000,1000,1000,1000],[0.1,0.2,0.3,0.4,0.5,0.6,0.7000000000000001,0.8,0.1,0.2,0.3,0.4,0.5,0.6,0.7000000000000001,0.8,0.1,0.2,0.3,0.4,0.5,0.6,0.7000000000000001,0.8,0.1,0.2,0.3,0.4,0.5,0.6,0.7000000000000001,0.8,0.1,0.2,0.3,0.4,0.5,0.6,0.7000000000000001,0.8,0.1,0.2,0.3,0.4,0.5,0.6,0.7000000000000001,0.8,0.1,0.2,0.3,0.4,0.5,0.6,0.7000000000000001,0.8,0.1,0.2,0.3,0.4,0.5,0.6,0.7000000000000001,0.8,0.1,0.2,0.3,0.4,0.5,0.6,0.7000000000000001,0.8,0.1,0.2,0.3,0.4,0.5,0.6,0.7000000000000001,0.8],[0.993714948218984,0.9852471156956693,0.9849987389439632,0.9879217649164536,0.9834719893595504,0.9918442258400123,0.9894880549107068,0.9976806994616128,0.9959879822530081,0.9937294750198898,0.9909160224725007,0.9856552956863304,0.9865089237213619,0.9870963705544815,0.9893364911215472,0.9959141252734031,0.9989726478454771,0.9931944032436268,0.9871408496306064,0.98820731654814,0.9908522753792715,0.9890810069098133,0.9955170680572121,0.9956638792646283,0.9982245531091852,0.9965308277627688,0.9892205511604117,0.9926264979979376,0.9918063761859183,0.9891154817849397,0.9942266965398747,0.9973514877880442,0.9986843493096832,0.9958101248366751,0.9914874363456506,0.9923333918050298,0.9896550273726007,0.9900177815541209,0.9959924391264779,0.9971634919585145,0.9981991843171656,0.9972598451200275,0.9956208343512899,0.9890316943863593,0.9890120919178798,0.9907779792642506,0.9927925836132195,0.9970325218736538,0.9984850350361059,0.9973184556380886,0.9953722040805312,0.9915529560166411,0.9901350469790139,0.9911945225552155,0.9938795643063343,0.997318801944367,0.9994298490443403,0.9974640643238866,0.99550900636423,0.9892636533643084,0.9907059032999148,0.9878210170010318,0.9927162763832456,0.9970183254643585,0.9991150575519238,0.9970346997063678,0.9947932362493856,0.9945210695957081,0.9848551459686467,0.9839085278518368,0.9950819579362521,0.9973346281617689,0.9994199043709655,0.9981311398906556,0.9965724335134875,0.9936456901993483,0.9874775765588752,0.9850537864555858,0.9959965344329074,0.9973479616950881],[0.9939270723723909,0.979168671138438,0.9791542760131543,0.9705915289157845,0.9844375451438523,0.9732286913160855,0.9646898741768203,0.9618600484944619,0.9958226161344416,0.9919614191889287,0.9892698095449328,0.980714693041451,0.978548947109747,0.9836108306194778,0.9840983876402568,0.987563864825416,0.9985678999436155,0.9921558550719349,0.9882786509148906,0.9873414260440732,0.9900559171043212,0.9844439606560452,0.9931370795265757,0.9932896982783557,0.998193757137366,0.9958627819175462,0.9891953462148032,0.9925415564183243,0.9912701315765617,0.986870972839882,0.9928397918814256,0.996763993425839,0.9985936069191998,0.9955518644418991,0.9913629674149477,0.9927809539550083,0.989247405739889,0.989907022968373,0.9955111845549888,0.9964175124499526,0.9981033730048742,0.9973305230906604,0.9952676675976054,0.9897603659042866,0.9889764452946072,0.9903652495614406,0.9921032435430379,0.9965083634773517,0.9984955206239295,0.9969473977390571,0.9951805354606141,0.9909993063788094,0.9891148970356842,0.9908477782913039,0.9942085376540005,0.9968285893060043,0.999434093100356,0.9972863626564797,0.9955537336570872,0.9893590782375047,0.9905314038149066,0.98779041985581,0.9918141432102205,0.9968888387391386,0.9990874665797442,0.9969479724476839,0.9946129395018751,0.9944198025957574,0.9846603693481395,0.9842829787116243,0.9948513048822564,0.9968659131619974,0.9993491379868997,0.9980557617648831,0.996582117432772,0.9935754359564187,0.9874546309096548,0.9823519885575183,0.9956588041632463,0.9969056676838646],[0.9900976065416229,0.9748505983116202,0.9687201309170629,0.9544915101336097,0.9736031462295746,0.9491055789233159,0.954142752189836,0.940104849187157,0.993719885543102,0.9861659502374414,0.9759847815021292,0.9562931395720378,0.9588745513277334,0.9730768828774731,0.9682711462476014,0.9809240907340802,0.998230014238855,0.9846279859157142,0.974561710329598,0.978453676509179,0.9776207466773756,0.9676354191081744,0.98310380040447,0.9851514999828567,0.9967841010766019,0.9907909461725063,0.9838943459981637,0.9798124596072602,0.9683673682294983,0.9689333210250854,0.9843361075820675,0.9867468094782638,0.997060437160189,0.9911219719888685,0.9866063762986395,0.9801002924758141,0.9797477836590419,0.9775236637560113,0.9872428872475104,0.991904800654272,0.9971573709063419,0.994659022079677,0.9912300695044103,0.9847590322533699,0.9778802372561718,0.9754405089651627,0.9853090726986794,0.992182115146975,0.9972469464682298,0.9918114678634631,0.9880143522285812,0.9806022332877254,0.9784109793320112,0.9821444385613907,0.9879517190265138,0.9914866335752902,0.9987045574659315,0.9948055039716572,0.9902027624967196,0.9777528991729094,0.9750760408242076,0.9766989203419876,0.9807269673599029,0.9917796915031951,0.9982496863645115,0.9925039132729629,0.9896040262877613,0.9866802368980283,0.9713496445601438,0.968832784705267,0.9886154244342085,0.9913280209815334,0.9986329770060082,0.9962519777379346,0.991648318588612,0.9871652014576107,0.9744531598330033,0.9732862579254578,0.9879098884973178,0.9900843544459027],[0.003837749410593688,0.005236579368236349,0.008135236483586217,0.00829938295402974,0.01144183127782571,0.008895331914055138,0.007906204037652617,0.00436430189406077,0.002796997215240805,0.006040789730232143,0.007349641608033199,0.009555652369625085,0.01087445853382489,0.00944345775650288,0.007738073253899993,0.004692861312078545,0.002993904518083322,0.005213179971802387,0.008289340894493109,0.00871168504822927,0.008976058112741544,0.01008430748838366,0.007036546482923055,0.005038869591384961,0.00315709747399619,0.004868191171240696,0.008583527359275547,0.009448072494598708,0.00930525980187921,0.009877920650014955,0.008350348544675625,0.004984016825693208,0.00286049978460731,0.005135857523582168,0.007847911900429933,0.009260125494190287,0.01071947885930342,0.01010004494630283,0.007825253489697761,0.004717604878743573,0.003120979144981308,0.005030966711379945,0.008200297980753687,0.009219972134215508,0.0111439339910703,0.009965701970061783,0.007692278735208963,0.004982583753182429,0.002956305687772394,0.005142463822210643,0.007900212964394623,0.009568779315767616,0.009505373198495535,0.009679914808933553,0.007508659853078729,0.005073268573194292,0.002502252183339322,0.005035996197085356,0.007493435786027983,0.009865635877784343,0.01046230537411356,0.009821872381845466,0.007234640171819858,0.005163465850549787,0.002681522024814942,0.005487665241123468,0.007381069292350951,0.008624275363185462,0.01006843440659346,0.01030398978047409,0.008039117785717314,0.005086194957124956,0.002756508737706993,0.005122478550604037,0.00687846954224602,0.008835913896614473,0.01003280978880749,0.009699431757579393,0.007805304431366143,0.004664683979373232],[0.004100785517111099,0.006153302973055742,0.008710903578014687,0.0113785425666146,0.01203826374140227,0.01173930674722334,0.01323019392937667,0.009604288080762306,0.00281709546279958,0.006235831707153795,0.007693928869217645,0.01064695978453294,0.01151738351998131,0.01030523434860906,0.009032405867416118,0.006511673534299849,0.003171789148087517,0.005324111423935711,0.008469543609899948,0.009281364268180098,0.009568373777580548,0.01122402324192643,0.007758740699114616,0.005884019086911017,0.003204115322577761,0.005189569434939462,0.008746634720785551,0.00963014239862117,0.00985662183382963,0.01063041317752144,0.008972743780771793,0.005497459168080955,0.002888572699456083,0.005192271473723275,0.008006645554938371,0.009338913664978601,0.01091899841770716,0.01041907910383087,0.008321702156717894,0.005272325210807637,0.003236130517626341,0.005043134019755854,0.008303878643869009,0.009284197782964323,0.0115390105785366,0.01032963700353455,0.008142644238550822,0.005517958400649919,0.00295363848281098,0.005262151980699532,0.007992761531675883,0.009815045554888803,0.0099729813659404,0.009977635480740349,0.007634763049255232,0.005460492036206304,0.002549928822211491,0.005116203406061755,0.007658503014973879,0.009977292455800041,0.01058327511029507,0.01002236111556509,0.007638298638883081,0.005518325725349126,0.002678217485050033,0.005576636185601423,0.007538514782229708,0.008756706523477127,0.0102656675534177,0.01062645706112074,0.008459085578136061,0.005362201279206508,0.002824515870494902,0.005215806528127296,0.007012466737523997,0.008936877297132715,0.01005491858693244,0.01018194598859927,0.008079533511978135,0.004957121237988828],[0.005005418504527774,0.006894016863679116,0.01080912603169754,0.01435776908124867,0.01579328903657434,0.01567730554993656,0.0173362677160485,0.01275210675315967,0.003496928040283055,0.007754403144313377,0.01023803838280017,0.01477889501026106,0.01510786533920325,0.01291323861200753,0.01213466076552511,0.008925363514133648,0.003951117404731239,0.006621988540232679,0.01091209563612692,0.01182598612572546,0.01292799326111013,0.01566235261272896,0.01095850598137979,0.00857427353306694,0.003902652376432827,0.006299499597520175,0.01070125725593481,0.01349404678472572,0.01385778567291183,0.01455784635528671,0.01184318536833878,0.008286900505783141,0.003580000548238644,0.006619184121984918,0.01016430792635464,0.01225502614492644,0.01483555947971614,0.01440689786264793,0.011987032202494,0.007377815500130291,0.004134334197945212,0.006450481078960625,0.01023231704122166,0.01209763726014601,0.01509249987188559,0.01351402095933357,0.01119479525077252,0.008090302933796124,0.003538955160395401,0.006816549705704593,0.01026512719018415,0.01285626472547336,0.0138074170623075,0.01292790837567386,0.0108008005719306,0.007595531273225211,0.003189593223471549,0.006406634692708692,0.009918345752301359,0.01318293797191182,0.01424816568928122,0.01317045455694216,0.0103333099381554,0.007831245896973527,0.003304513476755018,0.006707540994107657,0.01025111565520379,0.01166137578139785,0.0133474579375575,0.01362071133902511,0.01126696257996472,0.007420520362050841,0.003555422661184686,0.00649626661210342,0.008943391413319519,0.01136926484022826,0.01331931733153923,0.01309537265820592,0.01176455511233944,0.007643638777976154],[0.003706727043535938,0.005024730645550014,0.007050764840331007,0.007052508594481451,0.008240633256792895,0.006622167122640792,0.008413038697989168,0.00346805789515692,0.003188918422887876,0.004896412394078247,0.005818250745582032,0.006991045632423634,0.006807613145773088,0.007129911104664112,0.006213572444445013,0.004326211770326708,0.002302480621571807,0.004148510173330991,0.006156953470464263,0.0058246037132459,0.005566603923153193,0.006289015801655305,0.004205201177712684,0.003557187070097124,0.00264459291457881,0.003711177837812142,0.005619444888514609,0.005197303210123039,0.005122978630728075,0.006659405925725489,0.004623900759594023,0.003308219346859503,0.002220825358976347,0.003424237073226062,0.004947456198212451,0.004887148142534567,0.005675874925556355,0.005556855410814705,0.003957356797929973,0.002720767918904849,0.002562838950713243,0.002857184319407774,0.004636611357259807,0.00579563428077999,0.005713996936577274,0.004950106510113211,0.004647871274269581,0.002900832699804149,0.00217660348397555,0.003109170059927191,0.004101425884238747,0.005208933725806866,0.00538628195544888,0.005564608910372699,0.005442481898230069,0.003267092452792557,0.001604579324471494,0.003286789820391274,0.00425918828840376,0.005596326305555342,0.004962253503721641,0.006079855601471547,0.004789471624973877,0.003688147221315437,0.001782050318784252,0.003414385019932325,0.004393449616086053,0.004932294587561011,0.006015481569466849,0.006086928205342638,0.004531905020695134,0.003004865919957525,0.001706714993005626,0.002933702630586362,0.003601122208279674,0.004629894884099671,0.00588601894110369,0.005881419574708504,0.004302591817790973,0.002820070317381048],[0.004085690572802518,0.007042891765205769,0.009114508576442042,0.01075639025628017,0.009242627569674054,0.01085198965183364,0.0170451180401986,0.01428719179673857,0.003402104931031599,0.005534654976514697,0.006131555226551759,0.008632440715439416,0.009124358981351704,0.008244058953162794,0.007671592567744768,0.007400986963000167,0.002694421618559746,0.004437131700943142,0.006089308916840736,0.006237364154657111,0.005946527008414138,0.007689303191008856,0.004907951841005745,0.004472135008909279,0.00267916872223226,0.004015542681323809,0.00576623286364505,0.005294303737279626,0.005364967874369264,0.007247049998510372,0.004982826483479815,0.003436832151006554,0.002313181564396033,0.003572715832602887,0.004993167235204566,0.004821295096152371,0.005763722664203148,0.005717820053612359,0.004212350006886591,0.003166793507828388,0.002654912135204954,0.002883169924131702,0.004845865624584768,0.005701716086603715,0.005831720824341117,0.005142693834268046,0.004962866119830772,0.003140368319611291,0.002171369651275717,0.003315998794176071,0.004221246819678014,0.005430051114140905,0.005688802370591261,0.00579447415279916,0.005486722463437651,0.003521837989887137,0.001589283841525562,0.003403488084916004,0.004266106385822697,0.005663185450978432,0.005042218675247354,0.006154006913634959,0.005136476069711699,0.003697199531677786,0.001788701070563113,0.003467688239523526,0.004507325924709257,0.005006165132822369,0.006037493987100763,0.006044490920903021,0.004738524438382532,0.003249286164140242,0.001786170776203717,0.00300747542679478,0.00358357292602579,0.004615457598793926,0.005850960924949218,0.006361929381338776,0.004405756965362532,0.003058872377791553],[0.004745258641175997,0.008005338797361091,0.01084366786446634,0.01244680118279332,0.01157681478954714,0.01778669907421561,0.01977439985958694,0.01805015236458796,0.00379884685129774,0.006129880400890634,0.008299330087865502,0.01116647642583206,0.01112982759268613,0.009707289984802778,0.01043375609477882,0.008980544130591401,0.002950403577606183,0.005183088492428598,0.008219678546672759,0.00725160177073833,0.008221398707764473,0.01066208320146848,0.006732552478656615,0.0061632984714485,0.00315560074355102,0.005041341834778784,0.006435804556649536,0.007338079245368424,0.008281242341916826,0.009428283065258379,0.006935695612368411,0.005939983304494853,0.002953364351099699,0.004265991506916509,0.005439389007322022,0.007185190057594588,0.007002876354041798,0.00782878147609318,0.006241291705748866,0.004170339803226096,0.003134078380071869,0.003785682961244847,0.005440994766644884,0.006419496218628059,0.007384516558044753,0.007058944434915978,0.006082232359191626,0.003896350086324242,0.002479863281203028,0.004480636387059764,0.005463812652540898,0.007087905343745472,0.007479682930751334,0.007242455099776264,0.006667855537592107,0.004842611064817091,0.001905303256071062,0.004090173206638132,0.005362126000060397,0.007238479929899483,0.006899097309208187,0.007725755294180175,0.006881894292744094,0.0053403871773,0.002163113285211199,0.004134074677784798,0.005947837455344645,0.006566487837827971,0.007279694433911384,0.007384008210765679,0.006077157146052218,0.004639764535358364,0.002149886739804194,0.003313875296439703,0.00465179930031804,0.005669177326223166,0.007609608935637804,0.007495310139469379,0.006384061222223823,0.004715413322949537],[0.005322663586968471,0.007239972538591895,0.01074235656777337,0.0108683143181508,0.01407637947408573,0.0110696461859263,0.01151431674992134,0.005563657280154941,0.004229618768970732,0.007760401062572379,0.009355787144201927,0.01181932587136021,0.01281147958586183,0.01181127302350017,0.009904553265032458,0.006368036941891887,0.003769863008915083,0.006649457174089473,0.01030738413673436,0.01046327887001659,0.01054736117179104,0.01186783320379078,0.008186566202133993,0.006157698499612785,0.004109804250281263,0.006110188034273183,0.01024383382629358,0.01077069704868577,0.01060979122932404,0.0118944325959141,0.009533885591394243,0.005972787483819476,0.003614582083735292,0.006163115580375198,0.009264031023361713,0.01045922076282747,0.01211613088506008,0.01151437204338435,0.008759970113518896,0.005439149573214692,0.004030257172418191,0.005778623820922426,0.009408935657269685,0.01087480432491073,0.01251041678676751,0.0111163723701999,0.00897540152018318,0.005758196150376261,0.003664692349808557,0.006001266802907322,0.008891953791144746,0.01088224233547994,0.01091210486630492,0.01115150098912054,0.009257339298490919,0.006025380334875467,0.002968197104213699,0.006004682768244431,0.008608766340576321,0.01132856790199423,0.01156881817551176,0.01153518274567934,0.008663121058699069,0.006334649573309453,0.003214732753256465,0.006454139339395267,0.008578435721754986,0.009922821178452555,0.01171297889411397,0.01195208740862199,0.009217385543529804,0.005899856451375431,0.003237559806061642,0.005895789303804935,0.007755755513873654,0.009964684729574685,0.01161705810623639,0.01132787127493263,0.008902244135796353,0.005443504564493156],[0.005774286158432801,0.009325740648895178,0.01257471133146222,0.01562095269092782,0.0151489833538539,0.01594952820592825,0.02150973546846115,0.01715590162249419,0.00440379750960822,0.008319169703132524,0.009819193003799872,0.01367960507587782,0.01466531659046966,0.01317128383730088,0.01182578348161149,0.009829992582069152,0.004153017599276728,0.006916459991114109,0.01041355151779958,0.01116509682718756,0.01124994881653565,0.01358333004833369,0.009167615207729485,0.007377104597175375,0.004167948601793165,0.006549425021735554,0.01046026803828733,0.01097674806851594,0.01120915421000021,0.01284524116818838,0.01025136113509821,0.006474145601847231,0.003693393168944522,0.006292459707466843,0.009422779573498871,0.01049894023137884,0.01233340262888721,0.01187113056434482,0.009317477562487268,0.00614212572636946,0.004177393157019635,0.005801960260508708,0.009602186732568827,0.01088029407424785,0.01291579046078493,0.0115275421274042,0.009522940455433679,0.006341226928780665,0.00365946416678704,0.006210968764285278,0.009029118028232499,0.0112038261230574,0.01146731027804353,0.01152360105118672,0.009385443264785381,0.006488164815740629,0.003000450282205953,0.00613542428238842,0.008756159859697037,0.01145850415657369,0.01171219200395529,0.01174465750792562,0.009190384031548239,0.006632081901207043,0.003215634603287975,0.006557704190936311,0.008771660746035293,0.01007427325329338,0.01189399296587293,0.01221032765570986,0.009684276252402474,0.006261428313846002,0.003337075009763428,0.006013243475629606,0.007866909476526599,0.0100477460249455,0.01161863994182061,0.01198905083048038,0.009192140624720653,0.005816806603993739],[0.006880880698094392,0.01053432785158225,0.01527240933829475,0.01896099058798368,0.01954764417666594,0.02364210122629807,0.02622332548002387,0.02202648739642734,0.005149172073623978,0.009865427107739005,0.01315323234174649,0.0184894302652974,0.01873184258763636,0.01612578356270491,0.01596949045765879,0.01262955996906119,0.004922312586987338,0.008393241000002039,0.01363676337803462,0.01385329631549158,0.01529864348575454,0.01891668640508751,0.01284378618605212,0.01054156308084954,0.005008785044643483,0.008052618915563846,0.01247068993881996,0.01534269310028589,0.01612217359928545,0.01731861677060804,0.0137070738875949,0.01017839494487634,0.004631580864654322,0.007863107330539744,0.01151539139009185,0.01418789457301361,0.01639035385627452,0.0163779005745909,0.01349997004585216,0.008464631018986648,0.00517850770780626,0.007469724739122453,0.01157621232710534,0.01368030188490164,0.01678598601009018,0.01523020590994048,0.01272584204181416,0.008971216757822604,0.004314212361696361,0.008144979514956125,0.0116158319738925,0.01466354530227009,0.01568537427381404,0.01480065671797609,0.01267532697645375,0.008994913475313714,0.003710442510514706,0.00758994003780768,0.01126225793303958,0.01502203346254683,0.01581555543616205,0.0152494349447346,0.01239613482678854,0.009463770398223971,0.003943612279606877,0.007868339970713085,0.01183673835427703,0.01336694654788713,0.0151859570660241,0.01547585599781594,0.01278698425612391,0.008739351419741895,0.00414925972839882,0.0072851514521717,0.01007010895348071,0.0126916649360063,0.01532094321019586,0.01506987019481911,0.01336987031737717,0.008968597402847764]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th>n_obs<\\/th>\\n      <th>cens_prop<\\/th>\\n      <th>km_cor<\\/th>\\n      <th>cox_cor<\\/th>\\n      <th>aft_cor<\\/th>\\n      <th>km_diff_mean<\\/th>\\n      <th>cox_diff_mean<\\/th>\\n      <th>aft_diff_mean<\\/th>\\n      <th>km_diff_sd<\\/th>\\n      <th>cox_diff_sd<\\/th>\\n      <th>aft_diff_sd<\\/th>\\n      <th>km_rmse<\\/th>\\n      <th>cox_rmse<\\/th>\\n      <th>aft_rmse<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":10,\"searching\":true,\"columnDefs\":[{\"targets\":1,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 1, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":2,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":3,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":4,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":5,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 3, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":6,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 3, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":7,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 3, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":8,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 3, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":9,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 3, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":10,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 3, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":11,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 3, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":12,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 3, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":13,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 3, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"className\":\"dt-right\",\"targets\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13]},{\"name\":\"n_obs\",\"targets\":0},{\"name\":\"cens_prop\",\"targets\":1},{\"name\":\"km_cor\",\"targets\":2},{\"name\":\"cox_cor\",\"targets\":3},{\"name\":\"aft_cor\",\"targets\":4},{\"name\":\"km_diff_mean\",\"targets\":5},{\"name\":\"cox_diff_mean\",\"targets\":6},{\"name\":\"aft_diff_mean\",\"targets\":7},{\"name\":\"km_diff_sd\",\"targets\":8},{\"name\":\"cox_diff_sd\",\"targets\":9},{\"name\":\"aft_diff_sd\",\"targets\":10},{\"name\":\"km_rmse\",\"targets\":11},{\"name\":\"cox_rmse\",\"targets\":12},{\"name\":\"aft_rmse\",\"targets\":13}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[\"options.columnDefs.0.render\",\"options.columnDefs.1.render\",\"options.columnDefs.2.render\",\"options.columnDefs.3.render\",\"options.columnDefs.4.render\",\"options.columnDefs.5.render\",\"options.columnDefs.6.render\",\"options.columnDefs.7.render\",\"options.columnDefs.8.render\",\"options.columnDefs.9.render\",\"options.columnDefs.10.render\",\"options.columnDefs.11.render\",\"options.columnDefs.12.render\"],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\nVisualizing the RMSE between RISBS and ISBS:\n\n::: {.panel-tabset}\n#### Cox\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncox_mat = \n  res_ph_ind |> \n  select(n_obs, cens_prop, cox_rmse) |> \n  pivot_wider(names_from = cens_prop, values_from = cox_rmse) |> \n  arrange(desc(n_obs)) |>\n  column_to_rownames(var = \"n_obs\") |> \n  as.matrix()\n\n# color function\nmax_val = round(max(c(res_ph_ind$km_rmse, res_ph_ind$cox_rmse, res_ph_ind$aft_rmse)), digits = 3) + 0.001\ncol_fun = circlize::colorRamp2(c(0, max_val/2, max_val), c(\"#e0f3db\", \"#a8ddb5\", \"#43a2ca\"))\n\nHeatmap(cox_mat, name = \"RMSE\", cluster_rows = FALSE, cluster_columns = FALSE,\n        column_title = \"Censoring Proportion\", column_title_side = \"bottom\",\n        column_labels = paste0(seq(from = 10, to = 80, by = 10), \"%\"),\n        column_names_rot = 0, column_names_centered = TRUE,\n        row_names_side = \"left\", row_title = \"#Observations\", col = col_fun)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n#### AFT\n\n::: {.cell}\n\n```{.r .cell-code}\naft_mat = \n  res_ph_ind |> \n  select(n_obs, cens_prop, aft_rmse) |> \n  pivot_wider(names_from = cens_prop, values_from = aft_rmse) |> \n  arrange(desc(n_obs)) |>\n  column_to_rownames(var = \"n_obs\") |> \n  as.matrix()\n\nHeatmap(aft_mat, name = \"RMSE\", cluster_rows = FALSE, cluster_columns = FALSE,\n        column_title = \"Censoring Proportion\", column_title_side = \"bottom\",\n        column_labels = paste0(seq(from = 10, to = 80, by = 10), \"%\"),\n        column_names_rot = 0, column_names_centered = TRUE, col = col_fun,\n        row_names_side = \"left\", row_title = \"#Observations\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n#### Kaplan-Meier\n\n::: {.cell}\n\n```{.r .cell-code}\nkm_mat = \n  res_ph_ind |> \n  select(n_obs, cens_prop, km_rmse) |> \n  pivot_wider(names_from = cens_prop, values_from = km_rmse) |> \n  arrange(desc(n_obs)) |>\n  column_to_rownames(var = \"n_obs\") |> \n  as.matrix()\n\nHeatmap(km_mat, name = \"RMSE\", cluster_rows = FALSE, cluster_columns = FALSE,\n        column_title = \"Censoring Proportion\", column_title_side = \"bottom\",\n        column_labels = paste0(seq(from = 10, to = 80, by = 10), \"%\"),\n        column_names_rot = 0, column_names_centered = TRUE, col = col_fun,\n        row_names_side = \"left\", row_title = \"#Observations\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n:::\n\n### Prop. Hazards and Dependent Censoring {-}\n\nFor each combo of number of observations (`n_obs`) and proportion of censoring (`cens_prop`) variables ($100$ simulated datasets per combo), we calculate the following summary stats between RISBS and ISBS: **Pearson correlation**, **mean absolute difference** and its standard deviation, **root mean square error (RMSE)**:\n\n::: {.cell}\n\n```{.r .cell-code}\nres_ph_dep = \n  res |> \n  drop_na() |> # exclude few datasets where AFT prediction didn't work\n  filter(prop_haz == TRUE, cens_dep == TRUE) |>\n  group_by(n_obs, cens_prop) |>\n  summarize(\n    .groups = \"drop\",\n    km_cor  = cor(km_proper, km_improper),\n    cox_cor = cor(cox_proper, cox_improper),\n    aft_cor = cor(aft_proper, aft_improper),\n    km_diff_mean  = mean(abs(km_proper - km_improper)),\n    cox_diff_mean = mean(abs(cox_proper - cox_improper)),\n    aft_diff_mean = mean(abs(aft_proper - aft_improper)),\n    km_diff_sd    = sd(abs(km_proper - km_improper)),\n    cox_diff_sd   = sd(abs(cox_proper - cox_improper)),\n    aft_diff_sd   = sd(abs(aft_proper - aft_improper)),\n    km_rmse  = sqrt(mean((km_proper - km_improper)^2)),\n    cox_rmse = sqrt(mean((cox_proper - cox_improper)^2)),\n    aft_rmse = sqrt(mean((aft_proper - aft_improper)^2))\n)\n\nres_ph_dep |>\n  datatable(\n    rownames = FALSE,\n    options = list(pageLength = 10, searching = TRUE)) |>\n  formatRound(columns = 2:14, digits = c(1, rep(2,3), rep(3,9)))\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-97e8e751506a6f39f506\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-97e8e751506a6f39f506\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[100,100,100,100,100,100,100,100,200,200,200,200,200,200,200,200,300,300,300,300,300,300,300,300,400,400,400,400,400,400,400,400,500,500,500,500,500,500,500,500,600,600,600,600,600,600,600,600,700,700,700,700,700,700,700,700,800,800,800,800,800,800,800,800,900,900,900,900,900,900,900,900,1000,1000,1000,1000,1000,1000,1000,1000],[0.1,0.2,0.3,0.4,0.5,0.6,0.7000000000000001,0.8,0.1,0.2,0.3,0.4,0.5,0.6,0.7000000000000001,0.8,0.1,0.2,0.3,0.4,0.5,0.6,0.7000000000000001,0.8,0.1,0.2,0.3,0.4,0.5,0.6,0.7000000000000001,0.8,0.1,0.2,0.3,0.4,0.5,0.6,0.7000000000000001,0.8,0.1,0.2,0.3,0.4,0.5,0.6,0.7000000000000001,0.8,0.1,0.2,0.3,0.4,0.5,0.6,0.7000000000000001,0.8,0.1,0.2,0.3,0.4,0.5,0.6,0.7000000000000001,0.8,0.1,0.2,0.3,0.4,0.5,0.6,0.7000000000000001,0.8,0.1,0.2,0.3,0.4,0.5,0.6,0.7000000000000001,0.8],[0.9927601750006627,0.9831229215941519,0.9793435911107059,0.984158524527677,0.9848236280629284,0.9879718100412721,0.9915653081079336,0.9985855851061601,0.9961093398077434,0.9946402983025784,0.9896212790953396,0.9794097897333899,0.9844582301895685,0.9922335731668419,0.9942668002733225,0.9974905658407256,0.9973383180822122,0.9976734574993927,0.9918145835488962,0.9932487340680908,0.9864868650255718,0.9927248029346394,0.9951641761942255,0.9972560664450598,0.9979959162462102,0.9962634515582881,0.9966120608406503,0.9892134590713444,0.9788699934940615,0.9899076791210576,0.9926133011113247,0.9972824267888507,0.9985611114061806,0.9927326311017151,0.9944310059602611,0.9906377627721902,0.9935700768445145,0.9929499058667542,0.995066732141032,0.9980836304383883,0.9983657465795722,0.9947686305811212,0.9913956703888627,0.9910751771597688,0.9897261536536166,0.9898833033024298,0.9939464168111202,0.9970791520102602,0.9985604088453226,0.9966992253363397,0.9927226134979115,0.9913466747120544,0.9888962656050999,0.9881946591027119,0.9943155105122417,0.9974346968545442,0.9989762762937396,0.9984002420801016,0.9942718830398949,0.9907075509236718,0.9902199633005788,0.9909442446637901,0.9930080622506324,0.9973061109495184,0.9990545877352657,0.9974558523801146,0.9950980676580448,0.9927685821342752,0.9909469732225089,0.9896695911148854,0.9929829106455895,0.9974861351564656,0.9993744514992372,0.9976916393257408,0.9947773350017488,0.9915999271634863,0.9932930626113564,0.9910765032844184,0.9927895497808846,0.9967997141509243],[0.9918197051697791,0.9851329712058279,0.9908839018977059,0.9853955625153445,0.9697214956465876,0.9697230724650879,0.982236138363924,0.9687423717214434,0.9966745665250913,0.9969475751018442,0.9935215573735459,0.9848376576921236,0.9854124866030388,0.9822111833894022,0.9763393414464547,0.9727158219395989,0.9979192169628809,0.998181508808109,0.9938080343280588,0.9941370493457641,0.9887801115775663,0.988014114662303,0.9748903238118273,0.98200672533815,0.9986961377484935,0.997756898507844,0.9972132260616318,0.9931944542432073,0.9838808164996515,0.9883979552646099,0.9885032473506405,0.9839535609409286,0.998807482103351,0.9949097653485118,0.9959450440746401,0.9958127818805858,0.9924551804671797,0.9876709754661155,0.9876012742420294,0.9783539789315773,0.9989131191327537,0.9966191326027245,0.9941981056070761,0.9945829330946013,0.9888880188827226,0.9872112916823592,0.9846388633062365,0.9904139719980043,0.9986330491553234,0.9975349588630907,0.9930310363339638,0.9919027225902499,0.9930198661195988,0.9894343889410566,0.9929166101277023,0.9953109367380765,0.9992864524067531,0.998893617342163,0.9968896742761465,0.9944545431076776,0.9895986943397321,0.9914813934850731,0.9914603014360929,0.9904014093639468,0.9991777036423115,0.9984727340226737,0.9981170471115035,0.9962296080596678,0.9931833130663636,0.9845205863559974,0.9896535407660816,0.9899889045823179,0.9994123370936395,0.9986036916084189,0.9953811376121646,0.9936531074710481,0.9950574375798907,0.9919862341803311,0.9872552124761624,0.9936566989526937],[0.9914130709555201,0.9738739105400659,0.9865228449669785,0.97442508887026,0.9625277778587734,0.9540317003678773,0.9677077029115108,0.8533766255814884,0.9960511393845463,0.9948173269322821,0.9890216087222304,0.9785359912903275,0.9656012689881472,0.9659434727909058,0.9623064496565176,0.9757045184318344,0.9958034971585373,0.9942347623794068,0.9832457675859466,0.9860521143192398,0.9765507507514237,0.9834350327960665,0.9696795616407278,0.9719649642801219,0.9970001712850491,0.9943883097510736,0.9932008680099237,0.9869591891830188,0.9781062696005447,0.9741282419976482,0.9751909475529961,0.9735988394235572,0.9975960156900846,0.9868894506100375,0.9908557193792591,0.9887842151460213,0.98830466004893,0.9770760137078295,0.981116752511192,0.9695677332589701,0.9976989557541667,0.9931162900996172,0.987473412037154,0.9836585108233502,0.9821003788399004,0.980744463535975,0.973300597935683,0.980217002442024,0.9976958267925031,0.9942237887175682,0.9844557905446365,0.9849987552046008,0.9842217916940295,0.9781062730914251,0.9874067584764596,0.9912066397182693,0.9981560779228427,0.9968326569563895,0.9926979168736869,0.9874797147091084,0.9786027553682726,0.9859085090500289,0.9829495584962578,0.9814272521578841,0.9986360655351892,0.9970201469912364,0.9953140737123654,0.992047071549384,0.984148959660214,0.970073257441011,0.9801623353781578,0.9775027224731008,0.998940014872868,0.9962635298050887,0.9889082793141623,0.9855248849984607,0.990841100323775,0.9873932558742333,0.9774585533647487,0.9869933504246289],[0.003982148291601775,0.007052506075407228,0.008928248440948137,0.01028788878704373,0.009421041920804629,0.009634131340562136,0.007425431273593328,0.004460795907358814,0.003324253132993949,0.005209280906381581,0.008165268680161297,0.008814070794246294,0.01042713159054279,0.009820006183484647,0.006853984314780452,0.004760652414119578,0.003279206517504428,0.005420492363198338,0.007268500156441485,0.008490348420375262,0.01045397253540479,0.008652042201567241,0.007351759732298699,0.004905653803517744,0.002533268956355133,0.004989990641212755,0.007337644413979323,0.008985397247265629,0.01081027803415538,0.009763574350148841,0.00822194554842978,0.00487791421643958,0.002810788979454411,0.005893338556030542,0.007046427449390069,0.008963461209641916,0.009724628246741959,0.009963313678458621,0.007152867296770027,0.004898012551244388,0.003094853767454915,0.005844065259640719,0.007899567929991405,0.009200324064713187,0.0110324263361822,0.01017415421509888,0.008308261587347666,0.005048570492997159,0.002818684581353552,0.00552970241415537,0.007466611509060032,0.009987510380364734,0.00993874657007288,0.009726222894536578,0.008000648190326668,0.004612256927331216,0.0028314714916001,0.005322937525919038,0.008156779284508215,0.009544947745148661,0.01026866200453077,0.009389741758479427,0.008472966423007412,0.00510471695377566,0.002778546736083127,0.005661022133189259,0.007403074060929661,0.009318031561303852,0.01071194280203235,0.009738362343627575,0.008483729969930937,0.00472380895247044,0.002864616779605411,0.005485178238683472,0.007854293594432359,0.01015862666695047,0.009381315217954822,0.009902949368136505,0.00797337493165059,0.005580256061621358],[0.003305250038951888,0.005520787736121903,0.0049197721284375,0.006531371039815586,0.007151146305866325,0.007423748280078438,0.005816998040947536,0.007165085626485287,0.002451293819889657,0.002862447300581779,0.003717298960153419,0.004262528553869248,0.004591152229554607,0.005438553709620876,0.005389260505979345,0.005201760420299266,0.002296504124224702,0.002799740209057367,0.003535462251194212,0.003508733555559663,0.004301510810083571,0.003855211369508144,0.004362822930443037,0.003865480948974381,0.001680545308091371,0.002569893370324908,0.003073277312241111,0.003087307407357479,0.004443649219746466,0.004012715239536515,0.003698859102826458,0.003553987888288138,0.001878656004701718,0.002920663343806451,0.002807784620349146,0.003110432889218979,0.00320234067638451,0.004242312489659832,0.003257737147220662,0.00388719611423984,0.002050963468496994,0.002873109118013135,0.003302150230997013,0.003021432736199969,0.004349763377708101,0.003859885378807198,0.003898822375782078,0.002813605616215723,0.001888262408367644,0.002775722292272865,0.00340654252177911,0.003982348967707207,0.003499132715114707,0.003943687480433542,0.003187546966264631,0.002210621476199552,0.001914216194985985,0.002411690277504439,0.00296780135442943,0.003162970771563823,0.00358426297818087,0.003415835678845618,0.00348795877586984,0.002714597636188897,0.001735423137372758,0.002513582722116115,0.00245570665544668,0.003266568411786962,0.003381632258550372,0.003553380764677105,0.003314862676160804,0.002643232399582583,0.001829097753416858,0.002526394304350341,0.002966879083607723,0.003791233627940875,0.002684746099058175,0.003249935236129774,0.003592017866656526,0.002360247314043053],[0.003553454195838118,0.006879276715868759,0.005832008136113881,0.008205589782048939,0.008301520258273841,0.009011513617737974,0.007895670012665676,0.01191664183585007,0.002870221854774633,0.004022687528155194,0.004785443770639291,0.005591331425489816,0.006112487444455792,0.007215746051939888,0.006534995947014417,0.005427678510723209,0.002910330139645935,0.00394263810144354,0.004880808490169719,0.00477061263972941,0.005395316461198708,0.004882669977620191,0.005594829662038939,0.00489398751470661,0.002169505023739353,0.003447973280914203,0.004410940617339818,0.004054664514331182,0.005435951225911718,0.005527345186198736,0.004769460160820113,0.004518132271125123,0.002461422547752743,0.003999221561760366,0.003879215935987412,0.004298557031249582,0.004316217266002466,0.005544319040441136,0.00403738819683145,0.004814332314629986,0.002602887938119622,0.00372198171134987,0.004607381101986728,0.004400069546258992,0.005592819532463774,0.004818108314220803,0.004936628179087955,0.003829663570929625,0.002361768352560559,0.003742522885405719,0.004608675445242896,0.004929541770999921,0.004574896753323268,0.005322233650559889,0.004290992696677686,0.002926350942173437,0.002602893492597957,0.003458816392833923,0.003890098674492263,0.004100636950378031,0.004880626460727668,0.004554867048368136,0.005026860869367922,0.003637003265022173,0.002151547091844171,0.003261373771787993,0.003282573451453162,0.004169625562693591,0.004976090099038008,0.004782719312439589,0.004366933386392267,0.00378254262308285,0.002338869643082814,0.00351369118933653,0.004011351225840734,0.005040965308348954,0.003676849898909789,0.004125981305611117,0.004876608815758881,0.00318292312607652],[0.005434610993048943,0.00705945059223631,0.008409103191613792,0.007701166380708289,0.007737833303085354,0.007540041189400343,0.006449820654915586,0.003100128667332492,0.003194249942535108,0.0040896347382503,0.00567548599242519,0.006301005076873266,0.006768665556926554,0.005685685368414548,0.004271813025325398,0.003020886177795642,0.003022989935002849,0.003526801068679923,0.005046623554257294,0.005126743018076822,0.006854403299224007,0.005305537443472175,0.004287950591066462,0.002689777287928624,0.002331076607239745,0.003775045033512951,0.003838191189279344,0.005107651925874991,0.008033744138371924,0.006252959896018964,0.005059961426523868,0.003311680597434274,0.002067326178246214,0.003795879396660418,0.004018631758673764,0.005670727539308558,0.005065158595921523,0.005642906882084267,0.003991793487744612,0.002784143152265398,0.00235003313770186,0.004145704029069089,0.004724818977784991,0.005102299125363631,0.005944370619972428,0.00616807845414094,0.005023388114816429,0.003148612284571972,0.002030881625483982,0.00320077029857397,0.004319083368469338,0.004999975203406022,0.006038506801211919,0.006186763875563443,0.004729082274599957,0.002584021127736097,0.001954978410658645,0.002836640705211196,0.004689780761673693,0.005068756563017069,0.005665042331038699,0.005009060115979047,0.005383466806292227,0.003041489055095746,0.001808149667076844,0.003091105312782037,0.004375729193215014,0.004963184969987599,0.005453846003471381,0.004866633137693639,0.004645058950427987,0.002546825912379483,0.001701137742060015,0.003163518139883204,0.003700581251500251,0.005143873959734425,0.004624373996428937,0.005356780793347169,0.005032872829545538,0.003316820923255583],[0.005352335682534809,0.006338601851964654,0.005384476491565246,0.006408701632909928,0.009803840183594804,0.01074274610042959,0.006839983342591613,0.01269613604102771,0.002976023189131805,0.002598506402671272,0.004216958054212683,0.004580106275327931,0.004578353449833498,0.00518745765394683,0.005845613441826741,0.006838092082550212,0.002546603908213244,0.002613174516641737,0.003446143822873523,0.003291731789283396,0.004707649343165196,0.003883958240743949,0.005758511777777176,0.004159692630175646,0.001690418345942608,0.00253091212019621,0.002841575469886546,0.002889345958415166,0.005002989621592921,0.004301472421425131,0.003401174593845167,0.004254820823856749,0.001845846170507269,0.002537608372662808,0.002687166078596552,0.002661678531122896,0.003433010491941663,0.003924267831279522,0.003698866012989997,0.004938827661839771,0.001770808730763171,0.002989889684445903,0.002884609765187833,0.002585506320167744,0.004572402657024104,0.004060376292638303,0.003878633148038383,0.003167407836298163,0.00178585959559689,0.002296290683911753,0.003172039266370932,0.003426189435299078,0.003576036242987966,0.003680297681264108,0.003225805429713613,0.001831767813292876,0.001559202373433806,0.001990126458777651,0.002795363904347844,0.003100825142180329,0.003535378020373456,0.002962797603044395,0.003177132478148237,0.002547148104370921,0.001562333591022531,0.00209587388704191,0.002324638745629179,0.002735361270342407,0.00306087502755048,0.00369495931120835,0.003005279575601534,0.002528622221033541,0.001549100683422585,0.002214887980534594,0.002696228086234074,0.003357086817197949,0.002376458416662827,0.003124409432265031,0.004234900955240027,0.002066550144384045],[0.004812350884668636,0.008254326776883298,0.006285175776705303,0.007278338993764857,0.01005991647863109,0.01265101547563891,0.008688133087220076,0.03131988820077593,0.003060407577813,0.003415031851887735,0.004863259980462578,0.005308184295944373,0.006226390583259971,0.006587588479828774,0.007183419510275545,0.005911713890778254,0.003111753387990471,0.003436574268026712,0.005233471863392362,0.004729773825114458,0.006814421455159558,0.003977933909897665,0.007286729605219993,0.004961025247852371,0.002315164032312125,0.003469517832389723,0.003928850462227515,0.003448006205929132,0.005568080844498231,0.005471818524006153,0.00468128510741977,0.005247161792626457,0.002222725046321097,0.003688302768592679,0.003622092076198176,0.004007905650437993,0.004323908521710988,0.005059502126848834,0.004083232982265966,0.005693159191739806,0.002238279029899772,0.003487752245257782,0.003901277123084974,0.003475781119289622,0.005344169224929645,0.004207991979860399,0.004926798739737678,0.004386777457120471,0.002044698355746261,0.002936850951815854,0.003939284416273727,0.004167683762433249,0.004325941567616695,0.005015601537018318,0.004189532164952121,0.002718405412159472,0.002027453307405658,0.003116131597906511,0.003449362018711411,0.004120668730844497,0.004202695244179828,0.003446031200008926,0.004103305029319755,0.0032609548999066,0.001851653444275467,0.002476548147402204,0.003010651200642342,0.003396836433830468,0.004216073583218662,0.004486647488258785,0.004050405099826707,0.003426265522671004,0.001768764304599069,0.002851491046095416,0.003549652070732388,0.004359373249199634,0.002863578958854291,0.003709939237173997,0.004969531561827291,0.002959965650597294],[0.006715441288226535,0.009953658934343652,0.01223599225831849,0.01282792031787297,0.0121668136526221,0.01221065868877174,0.009814337176530456,0.005423411279221382,0.004599115051904201,0.006610179175406085,0.009927771273399453,0.01081635254117488,0.01241278093470002,0.01133297266259801,0.008064924280200206,0.005630124969684719,0.004449750425597009,0.006457219214162774,0.008834152317171964,0.00990488138914516,0.0124819292544673,0.01013533790981558,0.008499951117853077,0.005588201148852662,0.003434600659748334,0.006245675460219749,0.008271965911160958,0.0103230126806618,0.01344437526664206,0.01157738729064091,0.009640797682768938,0.005886467140630733,0.003483049502808113,0.006999718046182096,0.008101854540734548,0.01059146902811773,0.01095297529546885,0.01143641524055663,0.008181501825742057,0.005627118757724134,0.003878859243739551,0.007153066194993347,0.009192474844611312,0.01050804856749245,0.01251785195271945,0.01188184135102332,0.009695839028900744,0.005941606327259786,0.003468172161834159,0.006381229504437737,0.008614999928008025,0.01115796209494465,0.01161368210898401,0.01151054727515875,0.009281631829677214,0.005280464704968252,0.003435251371883008,0.00602492565019632,0.009397188486607118,0.01079543410992795,0.01171397442927163,0.01063047631594979,0.01002412378770916,0.005934330989564806,0.003310140953337607,0.00644255805768337,0.008588424853501378,0.01054573777283042,0.01200802691791193,0.01087579781219348,0.009660977234686252,0.0053605811275577,0.003327305248287765,0.006324155980151272,0.008674519378646104,0.01137496672559253,0.01044892634335655,0.01124605073597713,0.009415477610289772,0.006483096925068949],[0.006267830574125425,0.008381837026014433,0.007273707377471756,0.009127954300565242,0.01209516527418783,0.0130140142295327,0.008952931621209274,0.01452303011438818,0.003844084842125231,0.003857242242598237,0.005605641750757625,0.006239931845053756,0.006467477761720447,0.007497898785313631,0.007929288325408628,0.008564474284294018,0.003419688690985593,0.003820855857277804,0.004924981413008437,0.004799828575560114,0.00635950768252445,0.005458656886384164,0.007201369848650223,0.005663210689763015,0.002377579217861705,0.00359802903454022,0.004175983605988687,0.004218566568665275,0.006672562942163554,0.005866815314629118,0.005013252328628895,0.005527338103861962,0.002627246655403031,0.003860742941239805,0.003877151969279715,0.004085153612209125,0.004682167365123818,0.005765682482709479,0.004914902137767073,0.006265651771139333,0.002703859662491162,0.004135686031620928,0.004375056503422896,0.003968255319619934,0.006294302093118194,0.00558753113807615,0.00548581562431609,0.004224751382156024,0.002592862602045856,0.003595115525235627,0.004643893488121172,0.005242183667775111,0.004990399244252695,0.005381618349141738,0.004523402152452507,0.002865077119316737,0.002463944918632521,0.003120456262041986,0.004067402567180518,0.004418523452299527,0.005022036426214802,0.004512019650346645,0.004707343783710166,0.003713774920124633,0.00232984352540459,0.003266015703850945,0.003373484996603471,0.004251805317201239,0.004550901351052099,0.005112994418845739,0.004464269574752003,0.003649201084010123,0.002391926919799415,0.003352512439903436,0.003999915115451387,0.005052686969701519,0.003577560715973162,0.004497266719073995,0.00553693368156651,0.003130286023306596],[0.005962731802514584,0.01071340373399934,0.008551065377971378,0.01094423044322178,0.01300404317741194,0.01548079740587944,0.01170770792788852,0.03336363882408428,0.004184567730666791,0.005265722464495165,0.006805531334373797,0.007691426358237029,0.008702806852015072,0.009748299843863191,0.009684610096926781,0.008003659883510972,0.004249258826892638,0.005218844457504077,0.007136866286860223,0.006701178835900178,0.008664953322859579,0.006285394555630708,0.009157631775073428,0.00695102636945326,0.003164268523213779,0.004879108340186332,0.005893887038678131,0.005311324095923829,0.007761438211396794,0.007758410583840911,0.006666395022890333,0.006904210160988608,0.003309033472755042,0.005427827801223005,0.005294966645446572,0.005863468868911122,0.00609417381951167,0.007488794948192274,0.005727554714111555,0.00743409285672146,0.003425612310805295,0.00508868260926338,0.006024465686525257,0.005596503895936635,0.007717135062984617,0.006383125587445962,0.006957076263936397,0.005806694529611731,0.003117199577102525,0.00474819124781589,0.006050014169798189,0.006441760173760453,0.00628142603598398,0.007295948685504247,0.0059822657362447,0.003984891534504884,0.003293101240226579,0.004645060194814847,0.005187676266890026,0.005798735644972242,0.006427016064353061,0.005701157211429137,0.006475961028448736,0.004873938996378039,0.002832576417564642,0.004087605252277171,0.004443947446763408,0.005367391369528028,0.006508378935515909,0.006542408551033977,0.005942375859802424,0.005092104788097359,0.002927038281421328,0.004516161749552806,0.005344620489995164,0.006650075593927334,0.004651592070266912,0.005536094663095106,0.006944825055139607,0.004336448121758338]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th>n_obs<\\/th>\\n      <th>cens_prop<\\/th>\\n      <th>km_cor<\\/th>\\n      <th>cox_cor<\\/th>\\n      <th>aft_cor<\\/th>\\n      <th>km_diff_mean<\\/th>\\n      <th>cox_diff_mean<\\/th>\\n      <th>aft_diff_mean<\\/th>\\n      <th>km_diff_sd<\\/th>\\n      <th>cox_diff_sd<\\/th>\\n      <th>aft_diff_sd<\\/th>\\n      <th>km_rmse<\\/th>\\n      <th>cox_rmse<\\/th>\\n      <th>aft_rmse<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":10,\"searching\":true,\"columnDefs\":[{\"targets\":1,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 1, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":2,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":3,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":4,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":5,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 3, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":6,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 3, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":7,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 3, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":8,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 3, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":9,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 3, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":10,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 3, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":11,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 3, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":12,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 3, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":13,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 3, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"className\":\"dt-right\",\"targets\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13]},{\"name\":\"n_obs\",\"targets\":0},{\"name\":\"cens_prop\",\"targets\":1},{\"name\":\"km_cor\",\"targets\":2},{\"name\":\"cox_cor\",\"targets\":3},{\"name\":\"aft_cor\",\"targets\":4},{\"name\":\"km_diff_mean\",\"targets\":5},{\"name\":\"cox_diff_mean\",\"targets\":6},{\"name\":\"aft_diff_mean\",\"targets\":7},{\"name\":\"km_diff_sd\",\"targets\":8},{\"name\":\"cox_diff_sd\",\"targets\":9},{\"name\":\"aft_diff_sd\",\"targets\":10},{\"name\":\"km_rmse\",\"targets\":11},{\"name\":\"cox_rmse\",\"targets\":12},{\"name\":\"aft_rmse\",\"targets\":13}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[\"options.columnDefs.0.render\",\"options.columnDefs.1.render\",\"options.columnDefs.2.render\",\"options.columnDefs.3.render\",\"options.columnDefs.4.render\",\"options.columnDefs.5.render\",\"options.columnDefs.6.render\",\"options.columnDefs.7.render\",\"options.columnDefs.8.render\",\"options.columnDefs.9.render\",\"options.columnDefs.10.render\",\"options.columnDefs.11.render\",\"options.columnDefs.12.render\"],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\nVisualizing the RMSE between RISBS and ISBS:\n\n::: {.panel-tabset}\n#### Cox\n\n::: {.cell}\n\n```{.r .cell-code}\ncox_mat = \n  res_ph_dep |> \n  select(n_obs, cens_prop, cox_rmse) |> \n  pivot_wider(names_from = cens_prop, values_from = cox_rmse) |> \n  arrange(desc(n_obs)) |>\n  column_to_rownames(var = \"n_obs\") |> \n  as.matrix()\n\n# color function\nmax_val = round(max(c(res_ph_dep$km_rmse, res_ph_dep$cox_rmse, res_ph_dep$aft_rmse)), digits = 3) + 0.001\ncol_fun = circlize::colorRamp2(c(0, max_val/2, max_val), c(\"#e0f3db\", \"#a8ddb5\", \"#43a2ca\"))\n\nHeatmap(cox_mat, name = \"RMSE\", cluster_rows = FALSE, cluster_columns = FALSE,\n        column_title = \"Censoring Proportion\", column_title_side = \"bottom\",\n        column_labels = paste0(seq(from = 10, to = 80, by = 10), \"%\"),\n        column_names_rot = 0, column_names_centered = TRUE, col = col_fun,\n        row_names_side = \"left\", row_title = \"#Observations\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n#### AFT\n\n::: {.cell}\n\n```{.r .cell-code}\naft_mat = \n  res_ph_dep |> \n  select(n_obs, cens_prop, aft_rmse) |> \n  pivot_wider(names_from = cens_prop, values_from = aft_rmse) |> \n  arrange(desc(n_obs)) |>\n  column_to_rownames(var = \"n_obs\") |> \n  as.matrix()\n\nHeatmap(aft_mat, name = \"RMSE\", cluster_rows = FALSE, cluster_columns = FALSE,\n        column_title = \"Censoring Proportion\", column_title_side = \"bottom\",\n        column_labels = paste0(seq(from = 10, to = 80, by = 10), \"%\"),\n        column_names_rot = 0, column_names_centered = TRUE, col = col_fun,\n        row_names_side = \"left\", row_title = \"#Observations\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n#### Kaplan-Meier\n\n::: {.cell}\n\n```{.r .cell-code}\nkm_mat = \n  res_ph_dep |> \n  select(n_obs, cens_prop, km_rmse) |> \n  pivot_wider(names_from = cens_prop, values_from = km_rmse) |> \n  arrange(desc(n_obs)) |>\n  column_to_rownames(var = \"n_obs\") |> \n  as.matrix()\n\nHeatmap(km_mat, name = \"RMSE\", cluster_rows = FALSE, cluster_columns = FALSE,\n        column_title = \"Censoring Proportion\", column_title_side = \"bottom\",\n        column_labels = paste0(seq(from = 10, to = 80, by = 10), \"%\"),\n        column_names_rot = 0, column_names_centered = TRUE, col = col_fun,\n        row_names_side = \"left\", row_title = \"#Observations\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n:::\n\n### Non-Prop. Hazards and Independent Censoring {-}\n\nFor each combo of number of observations (`n_obs`) and proportion of censoring (`cens_prop`) variables ($100$ simulated datasets per combo), we calculate the following summary stats between RISBS and ISBS: **Pearson correlation**, **mean absolute difference** and its standard deviation, **root mean square error (RMSE)**:\n\n::: {.cell}\n\n```{.r .cell-code}\nres_noph_ind = \n  res |> \n  drop_na() |> # exclude few datasets where AFT prediction didn't work\n  filter(prop_haz == FALSE, cens_dep == FALSE) |>\n  group_by(n_obs, cens_prop) |>\n  summarize(\n    .groups = \"drop\",\n    km_cor  = cor(km_proper, km_improper),\n    cox_cor = cor(cox_proper, cox_improper),\n    aft_cor = cor(aft_proper, aft_improper),\n    km_diff_mean  = mean(abs(km_proper - km_improper)),\n    cox_diff_mean = mean(abs(cox_proper - cox_improper)),\n    aft_diff_mean = mean(abs(aft_proper - aft_improper)),\n    km_diff_sd    = sd(abs(km_proper - km_improper)),\n    cox_diff_sd   = sd(abs(cox_proper - cox_improper)),\n    aft_diff_sd   = sd(abs(aft_proper - aft_improper)),\n    km_rmse  = sqrt(mean((km_proper - km_improper)^2)),\n    cox_rmse = sqrt(mean((cox_proper - cox_improper)^2)),\n    aft_rmse = sqrt(mean((aft_proper - aft_improper)^2))\n)\n\nres_noph_ind |>\n  datatable(\n    rownames = FALSE,\n    options = list(pageLength = 10, searching = TRUE)) |>\n  formatRound(columns = 2:14, digits = c(1, rep(2,3), rep(3,9)))\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-f5caa29e3452160ef8e5\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-f5caa29e3452160ef8e5\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[100,100,100,100,100,100,100,100,200,200,200,200,200,200,200,200,300,300,300,300,300,300,300,300,400,400,400,400,400,400,400,400,500,500,500,500,500,500,500,500,600,600,600,600,600,600,600,600,700,700,700,700,700,700,700,700,800,800,800,800,800,800,800,800,900,900,900,900,900,900,900,900,1000,1000,1000,1000,1000,1000,1000,1000],[0.1,0.2,0.3,0.4,0.5,0.6,0.7000000000000001,0.8,0.1,0.2,0.3,0.4,0.5,0.6,0.7000000000000001,0.8,0.1,0.2,0.3,0.4,0.5,0.6,0.7000000000000001,0.8,0.1,0.2,0.3,0.4,0.5,0.6,0.7000000000000001,0.8,0.1,0.2,0.3,0.4,0.5,0.6,0.7000000000000001,0.8,0.1,0.2,0.3,0.4,0.5,0.6,0.7000000000000001,0.8,0.1,0.2,0.3,0.4,0.5,0.6,0.7000000000000001,0.8,0.1,0.2,0.3,0.4,0.5,0.6,0.7000000000000001,0.8,0.1,0.2,0.3,0.4,0.5,0.6,0.7000000000000001,0.8,0.1,0.2,0.3,0.4,0.5,0.6,0.7000000000000001,0.8],[0.9926669299815256,0.9845485399297382,0.9810511654545759,0.9855601829402731,0.9786797964080586,0.9853548119828544,0.992731608449799,0.9963178421055363,0.9960467426120793,0.9910283479613214,0.9827037750986559,0.9873849135049889,0.9748102770768697,0.9913308181611412,0.9930419334819346,0.9968127103054635,0.9974368677308608,0.9927970246415625,0.9923879804436081,0.9816659843526281,0.9756920493409513,0.9935104153018546,0.993874516580204,0.997423424824151,0.997903085813414,0.9912198375835748,0.985743883023396,0.9921100456200422,0.9852290771627222,0.9879786027412932,0.9926453298512715,0.9978589903343318,0.9961323681413587,0.9935192196793562,0.9947497066291265,0.9904369652601832,0.9836339106368196,0.9911615937031076,0.99556716200086,0.9976309168679532,0.997740252362584,0.9957624636714766,0.9928605151341963,0.98423430716825,0.9894208154025765,0.9906532421699695,0.9939910565082315,0.9976183738932503,0.9980344537593496,0.9943083318011212,0.9917305153601992,0.9855598199340115,0.9905606922845616,0.9892000472107391,0.9912013984385261,0.9964940471187788,0.9983980343101113,0.9957884300170816,0.9929965941009096,0.9872060788807572,0.9850673858341602,0.9913508463434167,0.9920004264137946,0.9973980553884557,0.9984805914046471,0.9959725791473542,0.9947104247467049,0.986442931915711,0.9894765516742937,0.9884829121974524,0.9917556815406752,0.9972094750656775,0.9978641602308922,0.995409234846045,0.9935119283484755,0.9905885351699371,0.9863184787839355,0.9840936357012233,0.9945758594498422,0.9969825225654562],[0.9902893672355821,0.9794554134721832,0.9682002380032567,0.9678645967346144,0.9745080008860419,0.9752246261754508,0.978682000067608,0.9643819382626758,0.9959667126047624,0.9900536731979543,0.9790437426369679,0.9855229319730305,0.9703156443160302,0.986407438172872,0.9898822147916517,0.9843129623689015,0.9970378596703909,0.9905535034571691,0.9931615467128373,0.9816903536885322,0.971773116212773,0.9914278395956231,0.9900264414935502,0.9948906267977066,0.9972155649359686,0.9894779001652519,0.9841439743652151,0.9908939883995859,0.9864654383907747,0.9844381874934273,0.987176545833105,0.9964180285198344,0.9950371675888833,0.9920415067204713,0.9936079910159638,0.9874008725258784,0.9768310491924695,0.9890209629946173,0.9943169503668544,0.9960854097383131,0.9972885661721346,0.9952426511715878,0.9910333383760483,0.9831807076016739,0.9886058402105296,0.9897460986025008,0.9916376024591109,0.9973640490293141,0.9977138407737879,0.993159874388311,0.9919370248780986,0.9841937397851095,0.9893650357254727,0.9873742737626681,0.9908754424710865,0.9957090244451182,0.9982366286269795,0.9946274981165433,0.9926168248433352,0.9862138324677793,0.9859322621764766,0.9882100274641803,0.9900044374196284,0.9970590351874608,0.9985133319491627,0.9958449787639796,0.9929465980647474,0.98536642277789,0.9870623889472523,0.9856226038205665,0.9907969978419571,0.9968339490978767,0.997875762284593,0.9951665151891462,0.9921218753398766,0.990100510045216,0.9849520138732072,0.9834071184506711,0.9938694213447279,0.9966369425608201],[0.9802515672862255,0.9712285384204786,0.9495272187553689,0.9485923297171653,0.9585322760939849,0.9418398811634486,0.9581938486295232,0.7254528480574878,0.9919338126802223,0.9879254795479467,0.9703653147264742,0.9608915812425829,0.9500358469093424,0.9673621865784668,0.9746335510989371,0.9758191314579099,0.9945189437263151,0.9815616145264415,0.9822206294682435,0.959505611921023,0.9462406592347467,0.9811278488283376,0.9789384465037499,0.9850746356479799,0.9951363256248781,0.982763302928272,0.9627803515093274,0.9840326237217218,0.9675468121983462,0.9681203842946761,0.9723820913772122,0.9922825610284445,0.9902350216786185,0.9806739128302322,0.9796954198533285,0.9747033619191194,0.9499568757819024,0.9720430654499004,0.977938675699354,0.9898970541264274,0.9952850555350179,0.991048539254034,0.9774223288775555,0.9730992962959062,0.9684015322721757,0.9742365730393857,0.9738938239313292,0.9885579845892535,0.9956522010996781,0.9855276234689274,0.9804005060566261,0.9753311268360179,0.977068802740589,0.9738346261940792,0.9811204084715101,0.9872715184136074,0.9963913591030337,0.9899838968850525,0.9786821935275538,0.9687133670244442,0.9671797137642331,0.9590520253800837,0.973547624466604,0.9901921854872927,0.9970739769495918,0.9907802666656057,0.9803195133055794,0.9589651595327489,0.967403307549748,0.9597409721292678,0.9766901628637994,0.9919532220865265,0.9968875960417238,0.9860588022764319,0.9829905538462342,0.9739067969179546,0.9535443596692567,0.9546300533044767,0.9817064344237686,0.9890425046542682],[0.004421926234535879,0.006127975469043498,0.008604596912234629,0.009430620697477991,0.01044877601099249,0.01075029916781059,0.007899231990051821,0.004885992801318612,0.003601468741285127,0.006064468699865984,0.008230532600577283,0.008721974071296438,0.01083289332055875,0.009909344369824571,0.007252721582190791,0.005345266344462181,0.003291410526524772,0.006706141401568931,0.007505473764331412,0.009908604144098178,0.01238533085463286,0.00941267056126667,0.007849997920244555,0.004874078517632455,0.002863776242074734,0.006658829477472265,0.008863877273538004,0.009454652964050575,0.01188991604186667,0.01100131120886899,0.007736881447111173,0.00522297844584891,0.003751987260279032,0.006521883927402982,0.008034030595908329,0.009610698403635445,0.01093093450608472,0.009989636967487194,0.008446212855845731,0.005478639991754772,0.003362316781066048,0.006856763254878202,0.008066818678331053,0.01053608823517655,0.01072192322120353,0.0115705916168779,0.008415905274671853,0.005491875743369037,0.003699500631437888,0.006032727617105298,0.008832583194096163,0.01089078748499055,0.01034602571113893,0.01024595883903463,0.008265998086193866,0.00517070007088523,0.003741231759872336,0.005631767316141552,0.009270605514039609,0.01009562236397112,0.01258596227492119,0.01062211336627165,0.008126910026832966,0.00552699796495468,0.003345630493874109,0.006581748672624862,0.008699786765652816,0.01132734914260013,0.01016554262397161,0.01179336496517331,0.009324242796758173,0.005219642808499309,0.003529642376519191,0.006198033654364636,0.00958271346322997,0.01114119993808983,0.01149937262219382,0.01132610223222668,0.008619221944938546,0.005503589218197147],[0.005538927156504943,0.007409316782208765,0.01037221489685278,0.01184662589811545,0.01254154987185211,0.01344487902744152,0.01105790416396631,0.01054250809905139,0.003423300399616214,0.005898083628839152,0.009175868261812247,0.01016171723088688,0.01213268823308121,0.01160268111863323,0.008595785604987418,0.008142842313644079,0.003369712441226328,0.007463779261166659,0.007926374022106056,0.01069631220541813,0.01393311331300816,0.01059679311187232,0.009502601784725159,0.006037026856839811,0.003254696053467945,0.00676484348926692,0.009339689228630932,0.01020538853058301,0.01256555481872519,0.01206333854461767,0.00878280606321079,0.006095521836961248,0.004190429386976834,0.00685318396735719,0.008568225248303838,0.01040491455051569,0.01176358001501353,0.0108450625441046,0.009500464789251,0.006409225725814504,0.003493675802785728,0.00726346518729115,0.008522537722197614,0.0111458022460859,0.01131515826488312,0.01234052860850082,0.009161356221585582,0.006085597756739751,0.003924770695119598,0.006208000419535836,0.009022945042302243,0.01156671720819427,0.01106151258146386,0.01103236144589883,0.008896898229942257,0.005822191523903605,0.003827755004026266,0.006033608045314645,0.009578425599200347,0.01064914839555335,0.01318947945661422,0.01147336298632054,0.008812653095910445,0.005891554465008122,0.003566443130679599,0.006922853854669085,0.009231413286944658,0.01176403919787111,0.01116748342552501,0.01271468304712191,0.009954518655952401,0.005820312153608963,0.003604646679629423,0.006583369785073213,0.01035441286196425,0.01168119324259381,0.01233397794560711,0.01194974460257255,0.009236527908007589,0.005941466130592966],[0.006085774491960652,0.008463388763071756,0.01336061996807405,0.01502878955776618,0.01603346264810042,0.0180729982339582,0.01624317208261826,0.01767260079721602,0.004366239354738877,0.007707986010090693,0.01098938836376074,0.0130000761004775,0.01501309125896004,0.01517860876759721,0.01283331254829927,0.01048173620770183,0.004336285771910683,0.008811319579395729,0.01031428756344015,0.01410659394965379,0.01782094007368376,0.01450273388970906,0.0124771385741524,0.008949530696706015,0.004008502155404377,0.008369847711493744,0.0125323106435542,0.0127117529008099,0.01739577461113558,0.01562487854384224,0.01215346015968901,0.007781601077686971,0.005077816541359419,0.009158077112006861,0.01127812475061955,0.01348207698330419,0.01547793367453174,0.01420472280035815,0.01429237330386708,0.008793525858176833,0.004354777056517768,0.008778130064304871,0.01089077765119546,0.01440705822362476,0.01540221504520464,0.01619001850032291,0.0128843530990073,0.008687277619113023,0.004829452839849827,0.008211670949267324,0.01194247226858209,0.01475804888898363,0.01477442548072903,0.01482275821061895,0.0117898962375468,0.008319901222919918,0.004730558740829891,0.007559955600008037,0.01237833513515095,0.01382878922720329,0.01722251333810558,0.0153538809865758,0.01210360159763405,0.008216393734683762,0.00433835283120461,0.008550037913415003,0.01188148207776467,0.0151288289569987,0.01493705243338288,0.01668929387308797,0.01373839824339962,0.00821398107178802,0.00450513047916273,0.008242171309666488,0.01324983383971326,0.0158780837004031,0.01637328325478299,0.0161658028449698,0.01251305947763536,0.008535473731259539],[0.004618790881524582,0.00634897736384816,0.008016282741638228,0.007689685718270308,0.009514326920417092,0.008701855462995643,0.006493959841455384,0.004280058774411091,0.003319180633990588,0.00545739679273698,0.00657172284848465,0.006589788491943099,0.008857741469177274,0.005894156025555807,0.005120395946287472,0.003848148104630915,0.002817335576391578,0.004549690737533399,0.00496749655075827,0.006487278352194379,0.008419052493671263,0.005100747545720589,0.004150054195311188,0.002994211395195571,0.002285312554345198,0.004613875575033931,0.006559162280277996,0.005257380511185846,0.008174759995956186,0.006737810138392061,0.004854544977286405,0.002738012778580245,0.002971800471646762,0.003962473732312104,0.004261655312569697,0.005593613564274295,0.006149982453171761,0.006306062133910244,0.00433289217281779,0.003087490501943362,0.002572872323572987,0.003691451245089405,0.005120658965304326,0.006327382040382896,0.005788693043651442,0.005711481469128518,0.005195326184082501,0.003141935406154305,0.00240893642083772,0.004089186020469201,0.00502692761683558,0.00594249648733064,0.005594925562878689,0.005976866639449334,0.00536654361892193,0.003334316903247066,0.002330243116957805,0.003555215850214944,0.004490368308674864,0.006130399945049951,0.006938112431884719,0.005906814909584335,0.005923011961104131,0.003404424686315875,0.002167774524079131,0.003781346209390122,0.004640997666769611,0.005909679738866742,0.00621187911217507,0.006202324579402413,0.005553720346968475,0.003167102621234063,0.00236136626432479,0.003669374489374316,0.004866604631576166,0.006241634093674738,0.006148724434683746,0.006386206781356332,0.005342563733074413,0.003766002247098804],[0.006327590550376811,0.008057575369902585,0.01132876436397312,0.01226066143232733,0.01211693438478739,0.01169303674756482,0.01155212220066766,0.01371222246268166,0.003279819712670066,0.005893279484528143,0.00842304587816985,0.007236010987559837,0.01010524995913059,0.007599083533746187,0.006121770582721485,0.007910270703169743,0.003086376713977139,0.005479423276660772,0.005011668520993668,0.006691829533504532,0.009367010736160745,0.00556762782256804,0.005573932271556272,0.003974771629302681,0.002546848743459703,0.005042860183514387,0.006720284260265725,0.005572409440255804,0.008047177093655957,0.007668934679553931,0.006280611388670272,0.003411469341690406,0.003289569858514795,0.004505164327033858,0.004539919763799662,0.006254632472560075,0.007308160367525248,0.006914325405182328,0.004950606008095708,0.003788300848870301,0.002802976348989941,0.003828900854447458,0.005451110736678388,0.006429937806178092,0.005981143650871745,0.005948436292762318,0.005743213347027607,0.003294914623911266,0.002547759927026112,0.004401953088931756,0.005009812346266848,0.00607661517648012,0.005757712491040402,0.00635320881277118,0.005595930643833936,0.003656260514522008,0.002519015604164088,0.003941879269744761,0.004588580307088279,0.006245410703482992,0.006936402820588136,0.006543079460283827,0.006361467895482266,0.003402948241395823,0.002172490471390788,0.003747372197738839,0.005394768640972333,0.006070007728019814,0.006692927835718606,0.006591870402639789,0.005545559838737896,0.003354253269061795,0.002287705429444194,0.003750634789665043,0.005180640844634799,0.006402906416341199,0.006188911402109326,0.006386026986218473,0.005464382474006613,0.003775071094846471],[0.007318675724167733,0.008661252653860882,0.01290063511518604,0.01510725533368452,0.01533892155057249,0.01645899168171013,0.0153733898790732,0.03911816044048454,0.004158670124368897,0.006891740525940666,0.008929504640520208,0.01051800529567638,0.01151395148839353,0.01038306898689241,0.008807566036141508,0.009051690721099324,0.003648258968652702,0.006442142655959649,0.006812152909306756,0.00897787622950196,0.01118913696157734,0.007361374773359771,0.006979507907396135,0.005812070841108562,0.003170911082941589,0.005955995419071453,0.009327892326974122,0.006465197839914682,0.01109704274607339,0.01073674689531941,0.008507220360087237,0.004370298925527629,0.003933430973100454,0.006126463329533324,0.006933179425526085,0.007891505689604925,0.009363546008665196,0.009270810797217081,0.007720390204472433,0.005203806146912846,0.003245089743445561,0.004883535430585883,0.007208729133758317,0.007236017022925734,0.008642297734475494,0.008088803475752551,0.008577517091981877,0.005424385849115153,0.002997424366419811,0.00532762153434747,0.006754501534712958,0.007408728681466062,0.007595575546058787,0.008038734663140416,0.007224701178763641,0.005409471798849707,0.003241782151821619,0.004676521790942863,0.006309934370881716,0.008281323763729184,0.009252494588709305,0.009858303639949832,0.009007012880098419,0.005085985017690503,0.002708778481738628,0.004806782623984306,0.007429515936577138,0.008380826285820969,0.009030081711580814,0.008936600597817906,0.007735665385725144,0.00460208676610429,0.002812089546522713,0.004999693843105471,0.006791073811097595,0.009100877963836296,0.008637129771378029,0.008528416428317977,0.007616564264463236,0.005646515735630857],[0.00637756446763643,0.008801051174728429,0.01173274346118527,0.01214399277507249,0.01409943660963018,0.01380340529765418,0.01020506764122303,0.006481407234222097,0.004886447336736727,0.008140216739589697,0.01051177114831215,0.01091164015834593,0.0139651912192437,0.01151471972480589,0.008863308662630772,0.006575107123846946,0.004323353930297602,0.00809104575731482,0.008986734567630474,0.01182558111464722,0.01495219250882629,0.01069372789839255,0.008869790734488814,0.005712388700913621,0.003656653355221729,0.008087952729444535,0.01100710490197179,0.0108052816720173,0.01440585080667605,0.01288304905372929,0.009120870319974118,0.005890776746891222,0.004777100633662983,0.007620968183963776,0.009084367702769033,0.01110590614875751,0.01252714614383064,0.01179667759085396,0.009482864896312016,0.006281143827588196,0.004225949527586923,0.007778455506055489,0.009541095343074233,0.01227373460481919,0.01217101125804532,0.01289082622375469,0.009876687785369782,0.006319314812231368,0.004408089138714346,0.007276539726345599,0.01015045945427522,0.01239231148334096,0.01174863430995959,0.01184674546061899,0.009840656323163331,0.006143503214145724,0.004401425648056024,0.006650561423471224,0.01029105922969145,0.01179523532479618,0.01435487640009617,0.01213963962060875,0.01003864397840678,0.006482431092959041,0.003980640315943448,0.007581227404142121,0.009849353304525087,0.01276259809240173,0.01189705108516467,0.01331043196474682,0.01083867498028726,0.006097122655122821,0.00424012563894849,0.007193419717524826,0.0107366381866973,0.01275503105080875,0.01302552550786343,0.01298677760102749,0.01012648315930206,0.006658110804016225],[0.00838556689774482,0.01091665016442153,0.01531797424141905,0.01700479713905688,0.01739661953037268,0.01777989340121698,0.01594931900154279,0.01724207851263805,0.004729548688845005,0.008316900032146178,0.01242717921353152,0.01245378470756858,0.01575744394660158,0.0138488562339282,0.01053512432217619,0.01132486378356595,0.004559103633931787,0.009242934572406389,0.009364457180690903,0.01259935996295865,0.01676290928875899,0.01195744617511415,0.01100261216426714,0.007216988211222158,0.004124798824366002,0.008422543670201245,0.01148633237288272,0.0116142664236838,0.01489975357136092,0.01427405234578221,0.0107791141085579,0.006976899619707314,0.00531721314249745,0.008188996950047317,0.009686033587222004,0.0121240038723463,0.01382956726175905,0.012843099253537,0.01070150671918293,0.00743544790128869,0.004470333350415549,0.008201848730981589,0.01010203501316326,0.01285144221082827,0.01278472311542149,0.01368644225951319,0.01079745814406178,0.006912481306442107,0.004672258003211303,0.00759754488608928,0.01030828670457736,0.01305162619972453,0.01245699808092107,0.01271505519726287,0.01049552730866074,0.006865309365321216,0.004575335352597671,0.007196350054017429,0.0106108791106896,0.01232961738486417,0.01488606447604661,0.01319173332626242,0.01084999345307804,0.006795194638892979,0.004170375798914604,0.007863095821469351,0.01067855255533729,0.01322381042396956,0.01300230811215345,0.01430669049221083,0.01138148247186968,0.006709287473981855,0.004263184004421201,0.007567519173362311,0.01156652561841706,0.01330538886726341,0.01378573937307861,0.01353402834815766,0.01071780354133917,0.007029201230183784],[0.00949020734119997,0.01207874471596951,0.01852750086878202,0.02125585537332218,0.02213598007044871,0.02438898702840021,0.02231130815698089,0.04274633306405094,0.006015449936135766,0.01031669399245116,0.01413171430518538,0.01668904220331664,0.01888486900240961,0.01836083343670652,0.01553999350863825,0.01381957191048908,0.005655092383242413,0.01089612512363822,0.01234203795685765,0.01669707255289809,0.02101263246704978,0.01624737610951488,0.01427954419166497,0.01065518903354603,0.005101098335740553,0.01025541287961032,0.01559453432236892,0.01424673496241837,0.02060402602533125,0.01892780457594147,0.01481066048917738,0.008914136688639135,0.006411035895676132,0.01100129964087422,0.0132206045651328,0.01560190703767705,0.01806559339603959,0.0169370187265774,0.01622591493005289,0.01020465087344619,0.005421197707200778,0.01003312451646924,0.01304051976780203,0.01610588928285005,0.01764002962947441,0.01808013145122156,0.0154545985469862,0.01022734152422916,0.005676118571384559,0.009774009181505375,0.01370363827450461,0.01649667769820497,0.01659516461149882,0.01684307582969937,0.01380854798099078,0.009909112858892523,0.005725578224521309,0.008877166562290283,0.01387949205717913,0.0160975132097266,0.0195286337267659,0.01821965835302098,0.01506001312324943,0.009649751145367487,0.005107387917763833,0.009796798248567185,0.01399340367264442,0.01727475997954528,0.01743107820412373,0.01891022823566024,0.0157475617180741,0.009404089303298677,0.005303298009330298,0.009627063780687665,0.0148733181722408,0.01827848176550625,0.01849157686953996,0.01825759374971109,0.01462883209181241,0.01021854296708788]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th>n_obs<\\/th>\\n      <th>cens_prop<\\/th>\\n      <th>km_cor<\\/th>\\n      <th>cox_cor<\\/th>\\n      <th>aft_cor<\\/th>\\n      <th>km_diff_mean<\\/th>\\n      <th>cox_diff_mean<\\/th>\\n      <th>aft_diff_mean<\\/th>\\n      <th>km_diff_sd<\\/th>\\n      <th>cox_diff_sd<\\/th>\\n      <th>aft_diff_sd<\\/th>\\n      <th>km_rmse<\\/th>\\n      <th>cox_rmse<\\/th>\\n      <th>aft_rmse<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":10,\"searching\":true,\"columnDefs\":[{\"targets\":1,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 1, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":2,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":3,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":4,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":5,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 3, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":6,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 3, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":7,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 3, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":8,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 3, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":9,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 3, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":10,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 3, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":11,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 3, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":12,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 3, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":13,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 3, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"className\":\"dt-right\",\"targets\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13]},{\"name\":\"n_obs\",\"targets\":0},{\"name\":\"cens_prop\",\"targets\":1},{\"name\":\"km_cor\",\"targets\":2},{\"name\":\"cox_cor\",\"targets\":3},{\"name\":\"aft_cor\",\"targets\":4},{\"name\":\"km_diff_mean\",\"targets\":5},{\"name\":\"cox_diff_mean\",\"targets\":6},{\"name\":\"aft_diff_mean\",\"targets\":7},{\"name\":\"km_diff_sd\",\"targets\":8},{\"name\":\"cox_diff_sd\",\"targets\":9},{\"name\":\"aft_diff_sd\",\"targets\":10},{\"name\":\"km_rmse\",\"targets\":11},{\"name\":\"cox_rmse\",\"targets\":12},{\"name\":\"aft_rmse\",\"targets\":13}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[\"options.columnDefs.0.render\",\"options.columnDefs.1.render\",\"options.columnDefs.2.render\",\"options.columnDefs.3.render\",\"options.columnDefs.4.render\",\"options.columnDefs.5.render\",\"options.columnDefs.6.render\",\"options.columnDefs.7.render\",\"options.columnDefs.8.render\",\"options.columnDefs.9.render\",\"options.columnDefs.10.render\",\"options.columnDefs.11.render\",\"options.columnDefs.12.render\"],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\nVisualizing the RMSE between RISBS and ISBS:\n\n::: {.panel-tabset}\n#### Cox\n\n::: {.cell}\n\n```{.r .cell-code}\ncox_mat = \n  res_noph_ind |> \n  select(n_obs, cens_prop, cox_rmse) |> \n  pivot_wider(names_from = cens_prop, values_from = cox_rmse) |> \n  arrange(desc(n_obs)) |>\n  column_to_rownames(var = \"n_obs\") |> \n  as.matrix()\n\n# color function\nmax_val = round(max(c(res_noph_ind$km_rmse, res_noph_ind$cox_rmse, res_noph_ind$aft_rmse)), digits = 3) + 0.001\ncol_fun = circlize::colorRamp2(c(0, max_val/2, max_val), c(\"#e0f3db\", \"#a8ddb5\", \"#43a2ca\"))\n\nHeatmap(cox_mat, name = \"RMSE\", cluster_rows = FALSE, cluster_columns = FALSE,\n        column_title = \"Censoring Proportion\", column_title_side = \"bottom\",\n        column_labels = paste0(seq(from = 10, to = 80, by = 10), \"%\"),\n        column_names_rot = 0, column_names_centered = TRUE, col = col_fun,\n        row_names_side = \"left\", row_title = \"#Observations\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n#### AFT\n\n::: {.cell}\n\n```{.r .cell-code}\naft_mat = \n  res_noph_ind |> \n  select(n_obs, cens_prop, aft_rmse) |> \n  pivot_wider(names_from = cens_prop, values_from = aft_rmse) |> \n  arrange(desc(n_obs)) |>\n  column_to_rownames(var = \"n_obs\") |> \n  as.matrix()\n\nHeatmap(aft_mat, name = \"RMSE\", cluster_rows = FALSE, cluster_columns = FALSE,\n        column_title = \"Censoring Proportion\", column_title_side = \"bottom\",\n        column_labels = paste0(seq(from = 10, to = 80, by = 10), \"%\"),\n        column_names_rot = 0, column_names_centered = TRUE, col = col_fun,\n        row_names_side = \"left\", row_title = \"#Observations\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n#### Kaplan-Meier\n\n::: {.cell}\n\n```{.r .cell-code}\nkm_mat = \n  res_noph_ind |> \n  select(n_obs, cens_prop, km_rmse) |> \n  pivot_wider(names_from = cens_prop, values_from = km_rmse) |> \n  arrange(desc(n_obs)) |>\n  column_to_rownames(var = \"n_obs\") |> \n  as.matrix()\n\nHeatmap(km_mat, name = \"RMSE\", cluster_rows = FALSE, cluster_columns = FALSE,\n        column_title = \"Censoring Proportion\", column_title_side = \"bottom\",\n        column_labels = paste0(seq(from = 10, to = 80, by = 10), \"%\"),\n        column_names_rot = 0, column_names_centered = TRUE, col = col_fun,\n        row_names_side = \"left\", row_title = \"#Observations\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n:::\n\n### Non-Prop. Hazards and Dependent Censoring {-}\n\nFor each combo of number of observations (`n_obs`) and proportion of censoring (`cens_prop`) variables ($100$ simulated datasets per combo), we calculate the following summary stats between RISBS and ISBS: **Pearson correlation**, **mean absolute difference** and its standard deviation, **root mean square error (RMSE)**:\n\n::: {.cell}\n\n```{.r .cell-code}\nres_noph_dep = \n  res |> \n  drop_na() |> # exclude few datasets where AFT prediction didn't work\n  filter(prop_haz == FALSE, cens_dep == TRUE) |>\n  group_by(n_obs, cens_prop) |>\n  summarize(\n    .groups = \"drop\",\n    km_cor  = cor(km_proper, km_improper),\n    cox_cor = cor(cox_proper, cox_improper),\n    aft_cor = cor(aft_proper, aft_improper),\n    km_diff_mean  = mean(abs(km_proper - km_improper)),\n    cox_diff_mean = mean(abs(cox_proper - cox_improper)),\n    aft_diff_mean = mean(abs(aft_proper - aft_improper)),\n    km_diff_sd    = sd(abs(km_proper - km_improper)),\n    cox_diff_sd   = sd(abs(cox_proper - cox_improper)),\n    aft_diff_sd   = sd(abs(aft_proper - aft_improper)),\n    km_rmse  = sqrt(mean((km_proper - km_improper)^2)),\n    cox_rmse = sqrt(mean((cox_proper - cox_improper)^2)),\n    aft_rmse = sqrt(mean((aft_proper - aft_improper)^2))\n)\n\nres_noph_dep |>\n  datatable(\n    rownames = FALSE,\n    options = list(pageLength = 10, searching = TRUE)) |>\n  formatRound(columns = 2:14, digits = c(1, rep(2,3), rep(3,9)))\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-b4d56505be004c8c4109\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-b4d56505be004c8c4109\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[100,100,100,100,100,100,100,100,200,200,200,200,200,200,200,200,300,300,300,300,300,300,300,300,400,400,400,400,400,400,400,400,500,500,500,500,500,500,500,500,600,600,600,600,600,600,600,600,700,700,700,700,700,700,700,700,800,800,800,800,800,800,800,800,900,900,900,900,900,900,900,900,1000,1000,1000,1000,1000,1000,1000,1000],[0.1,0.2,0.3,0.4,0.5,0.6,0.7000000000000001,0.8,0.1,0.2,0.3,0.4,0.5,0.6,0.7000000000000001,0.8,0.1,0.2,0.3,0.4,0.5,0.6,0.7000000000000001,0.8,0.1,0.2,0.3,0.4,0.5,0.6,0.7000000000000001,0.8,0.1,0.2,0.3,0.4,0.5,0.6,0.7000000000000001,0.8,0.1,0.2,0.3,0.4,0.5,0.6,0.7000000000000001,0.8,0.1,0.2,0.3,0.4,0.5,0.6,0.7000000000000001,0.8,0.1,0.2,0.3,0.4,0.5,0.6,0.7000000000000001,0.8,0.1,0.2,0.3,0.4,0.5,0.6,0.7000000000000001,0.8,0.1,0.2,0.3,0.4,0.5,0.6,0.7000000000000001,0.8],[0.991422280463504,0.9876759888365926,0.9838832874077579,0.986224977694327,0.9848360517088163,0.9889451566007342,0.9918133470983681,0.9982299962099603,0.9972287256092977,0.9936415976238215,0.9879044542548522,0.9927290941000116,0.9883715508977265,0.9873129702687868,0.992018159291534,0.998094881104433,0.9970800397322991,0.9909912714423402,0.9883470224075788,0.9816583992535174,0.9918653975622319,0.9889109645784373,0.9945585458894917,0.9966911125305916,0.9977605720916529,0.9952435638035388,0.9933528509113229,0.97843110371821,0.9905611676708503,0.9924920642173608,0.9949158411922022,0.9985985509255536,0.9969100542041321,0.9935749899037939,0.9884688535035058,0.9846136390647986,0.9917240230993043,0.9907856762267636,0.9913996550129732,0.9983377179778222,0.9984880005506999,0.9948068312819741,0.9943442429807962,0.9898785206200592,0.9885975872367063,0.9791711007418734,0.9942489140745413,0.9975610910344086,0.9987206722857426,0.9956847803491402,0.991882387886434,0.989859490499818,0.9911648397840688,0.9938518845793185,0.9946792979725034,0.9969944483796305,0.9979584353738388,0.9959885591096153,0.9931687853041665,0.9897366773058394,0.9920966301341252,0.9932351651017362,0.9959909712148879,0.9972398633165043,0.9979971285943818,0.9970797096950622,0.9910738780427815,0.9889526601077329,0.9886999454059073,0.9897242944073152,0.9958778115792855,0.9978453218549447,0.9986610488178717,0.9958790185158176,0.9953451503127824,0.9888577536920121,0.9854045448179557,0.985947729584878,0.9922271519697329,0.9974088380051783],[0.9922262061036884,0.9920452596909399,0.983058019145709,0.9885702432993262,0.9785868152643575,0.9799350153765193,0.948865360110437,0.9694352192194395,0.9972026841477711,0.9943974730945299,0.9896176464427685,0.9905678997794828,0.9837488844976457,0.9826589406862497,0.9722335467879435,0.9841157846633222,0.9978625672111512,0.9945107273067511,0.9895054220532469,0.9886262432947888,0.9869508962096016,0.9822384057132433,0.9801233968349,0.976797696682652,0.9970795110076481,0.9951021032624924,0.9928180136417074,0.9851019813941455,0.9869738028001107,0.9893290862147132,0.9873964949290028,0.985468165778839,0.9970124732922402,0.9946725795066913,0.9934415336495459,0.9946471462038073,0.991721722902601,0.9904538816101164,0.9883948269541234,0.9890675001594289,0.9981497621975529,0.9949250565082852,0.9962716622768398,0.9923559373736313,0.9847250493348038,0.9788834776542067,0.9865306557507684,0.9904452243869667,0.9984598642473382,0.9976176888126572,0.9955175341241711,0.9916166854576258,0.9920800572908107,0.987918413098627,0.9913419683775159,0.984707912466943,0.9981196451467039,0.9975003659863498,0.9972666228064795,0.992283281804347,0.9899754849160869,0.98957326113177,0.988993349070899,0.9879246674304031,0.99844383107669,0.9965668310993604,0.9905066074279886,0.9934735765745052,0.9882160211500752,0.9892309337943901,0.9921872656850167,0.9934916049442427,0.9991561146795176,0.9962281255982758,0.9960077324613175,0.9951417955599796,0.9903036318157288,0.9850916280676821,0.9856589053425125,0.9852362729771574],[0.9874199863656162,0.9822932285299296,0.9742874697369772,0.9835219951410745,0.9644768319754983,0.9450403236388095,0.9130427361097809,0.9353221642405163,0.9938479294014901,0.9919608910123728,0.9776927462609512,0.9834368524725036,0.9783872214878556,0.9763003152795023,0.9584116470141307,0.9432578125190529,0.9961109771142276,0.9879637201420597,0.978345547723399,0.9825586550774452,0.9769934307327748,0.9645821984688977,0.969525747143626,0.9278854689482156,0.9953137039423036,0.9912380669104489,0.9807197225995972,0.9755986056792364,0.9792386084576432,0.9722157026643314,0.9810285179707171,0.9687903935725042,0.9948484144107224,0.989713720466216,0.9855243696736119,0.9891672206365287,0.9829919973099728,0.9770519104042077,0.9808381995513772,0.9751389079748866,0.9963527595608789,0.9922776778064943,0.992542854187512,0.9801339794117019,0.9638512590328145,0.9740783485848219,0.9765959097607498,0.983307356801886,0.997486830505759,0.9967153023054883,0.9916632853954955,0.9821978981086196,0.9821890982840165,0.9717035867988227,0.9810810554508309,0.9731316538076227,0.9967625763765441,0.9966824602244945,0.9947704988985353,0.9847075931694294,0.9782318871597695,0.9803724026724894,0.9753413130379159,0.9786697570845444,0.9972431324556952,0.9949601406739992,0.9805376906894634,0.9852310863564732,0.9795409808205127,0.9805616961098645,0.9812685661873829,0.9866587064574367,0.9977973252502234,0.991644636751456,0.991255823129056,0.986026442865112,0.9793087451722785,0.9703707017972542,0.9771212401218112,0.9722416341543491],[0.004291063402785726,0.006456893138246649,0.008637983455244492,0.008766671136052444,0.01104903966449618,0.009182471428325123,0.008142463912681698,0.003893747133139846,0.003003814647191788,0.006265971081091798,0.008179252127912765,0.008735766396412636,0.01061419592131484,0.009545035524703998,0.008330502353620844,0.004833181200791754,0.003241535964820968,0.006240340030822653,0.008386301495474513,0.01065364865660864,0.01102925841889038,0.01046052413592319,0.007915444302786156,0.00517586933799717,0.003473982671181708,0.005674893904740893,0.007202905892224947,0.01071081006529369,0.01096985156428084,0.01004587942853102,0.008365061866017499,0.005315897847865634,0.003456271860784141,0.00588270855209005,0.008999224080337419,0.01092180167945803,0.01017662863125221,0.009875586186565796,0.008381317616517933,0.004807570044297473,0.003123499095208206,0.006885746575092253,0.008085620775862468,0.01040932787719073,0.01145621762141222,0.01208593408171459,0.008596162391421976,0.005122679216197625,0.003020346753801199,0.006222319882656253,0.008736879992294234,0.01020074680244675,0.0102486127806095,0.01003369318598121,0.007726879806871973,0.005503509388548852,0.00314572128971287,0.005855695105056811,0.009286474481566581,0.01020160966912652,0.01116939667528744,0.0102322732693496,0.007534808641687277,0.005171973322897776,0.00353746980171331,0.005642116288373637,0.008521317000804628,0.01014590751889808,0.0106980684632935,0.01085739477052026,0.007842298647266951,0.004863472167018701,0.003174399089486157,0.006236904932161313,0.007703255514347333,0.01102260321420649,0.01134092088827151,0.01138839957517711,0.008818534384426315,0.005417425549945998],[0.003526339822082595,0.004499835945326694,0.006158602048000546,0.005515380907827259,0.006818186349993797,0.006929333341848829,0.009703186664587235,0.00681747425061216,0.002358374940104624,0.004025953676110873,0.004335827283691768,0.004176884963194324,0.005163006001307662,0.004994625374388657,0.005197444256554756,0.004046126518058395,0.0025038976515204,0.00355120035624151,0.004175669688694227,0.004604865383935612,0.004857582940243257,0.004842441787387011,0.004526081500267147,0.004379210828925131,0.002748898161518382,0.003419699406874864,0.003563460268732478,0.004498208406728226,0.00480262681274524,0.004040362192608027,0.003865322112390471,0.003467729669605625,0.002550970341675104,0.003078993183770599,0.003773934205501068,0.003617632255808345,0.003828037604625853,0.003891176979818364,0.00370388041385081,0.002942627006771482,0.002225721888789897,0.00392247159312932,0.003399993139367184,0.004130365933367307,0.004221424120236669,0.004407884728901111,0.003474587871017997,0.002655654833897776,0.002093346804599433,0.003036926622177104,0.003850076501074141,0.003904511261824232,0.003670627598657455,0.003874379536702592,0.002853481048888849,0.003189276628566717,0.002285860086150907,0.002649004421137925,0.003314495671134985,0.003961961303797155,0.004015013569053092,0.003622447786737752,0.003408521073766217,0.002617799784908715,0.002374504166969728,0.003054194367190673,0.004351234088375462,0.003505439024979128,0.003803816424574336,0.003819528167220716,0.002634425266526932,0.001981850794577545,0.001965259118098201,0.003115762844940923,0.003303799183722936,0.00411345612903354,0.003925789675841049,0.003814008952541752,0.00327947865412613,0.003046566622573183],[0.004181841446338693,0.006148160004411554,0.007491972124058419,0.007156653414509832,0.008459565307827968,0.009510264567367971,0.01271369576587837,0.009727371540153542,0.002839887555199404,0.004548453756507173,0.005601585259222676,0.005236035919704952,0.005942269693837886,0.005666705948256637,0.006210074014888105,0.00600784887685872,0.002917640981105544,0.004352832665484353,0.005295519971394908,0.005436661064225437,0.006652893899560111,0.006566695446868919,0.005401342722652992,0.006417398117019883,0.003183260120270362,0.004419355976854919,0.004753533384390542,0.005664321106128311,0.006043810826047151,0.005687114574367206,0.004871510842436136,0.004467093245039383,0.00323691664085207,0.003877030536056769,0.004970266074663714,0.004855757502998181,0.004877093318431489,0.005342773824972504,0.004771880435517874,0.003955418158703034,0.002714401429222569,0.004860011164997861,0.004310271162650906,0.005591467675084814,0.005750441869209285,0.00535944732432523,0.004171791020355428,0.003345508456012405,0.002592892086943113,0.003997701516760193,0.004927612839736757,0.004875543514120684,0.004897069472531866,0.005174597348925017,0.004044165438017309,0.004052841775394134,0.002808744257437264,0.003627355171169786,0.004464524696730823,0.004996883861841926,0.005449239156485691,0.004575325794857948,0.004534347313242752,0.003412888097896465,0.003039812266587481,0.003760510763826609,0.005679866869789373,0.004706502807833865,0.004964640356263737,0.004759713755227047,0.003840855009188737,0.002795190897327229,0.002577024085875052,0.004114293510089027,0.004349106196229203,0.005799135811062201,0.005290042183013683,0.005176209941878806,0.004028608346594955,0.003767428606308522],[0.00488511457142246,0.006547449806269763,0.00749110997897334,0.007530137386582191,0.007731253433013351,0.007668388121364126,0.00669575838818449,0.0032205452919038,0.002907474122341467,0.004993193686397291,0.005855727909546192,0.005346408412595445,0.00654496470301136,0.006813556923605292,0.005023469420166673,0.002845328794145805,0.002973237228368628,0.005024443217493017,0.005257698471792997,0.007641037834540029,0.005881377882471791,0.00573383336725647,0.004704923089648925,0.003770962181701432,0.002565982854773115,0.003716494278216373,0.004618568534144939,0.007353146505647734,0.006028933574011034,0.005397755972827303,0.00476893453079869,0.002712509545134616,0.002819496725423532,0.00430101554842892,0.005697446913917099,0.006974847900284471,0.005490375601727767,0.006058377166932107,0.005658065419460887,0.00261335441886911,0.001964147229798382,0.004804808610175194,0.004623953586647821,0.005562300300505918,0.006047896012439784,0.006929573038436063,0.004705890572238615,0.002570103015187299,0.001715391859833653,0.00379757258857101,0.00550439175984276,0.005362478324667487,0.00600072762882432,0.005169395178401114,0.004089757387319078,0.003169039689109114,0.002198603894552312,0.003502628781502296,0.005066340334185162,0.005536357489557122,0.006142637691867406,0.004997283178486907,0.003783948929142594,0.002884641551102666,0.002393757009931864,0.003021376034187031,0.005301002422947486,0.005548632147342913,0.006136294785648564,0.0062758034186946,0.004219903600598969,0.002661728271912607,0.002164679409952366,0.003608865150026464,0.004141293853817662,0.006550866966596821,0.006761578198119995,0.006169096152839474,0.005264889538521672,0.003190848372459193],[0.005194259569738255,0.005772580609578373,0.007218748133995814,0.006101191174000115,0.007646537120784648,0.008103293459781667,0.01273864615248893,0.009363804202726129,0.00270344068940775,0.00396626780290417,0.004462279030327421,0.004423805379932966,0.005130899255992227,0.004760108547936219,0.006016166631242237,0.004836495851171733,0.002250166614927147,0.003182013744266759,0.004314710511734167,0.004488532937537667,0.00513101656317832,0.00439367693695284,0.005223177262445055,0.005439558378052427,0.002739160259147696,0.003591579390880305,0.003971888004091807,0.005162877161712426,0.004647478417359119,0.003392298794986074,0.003643492906293588,0.003205738028743334,0.002598345702504782,0.003379615010340872,0.003477851169632073,0.003102780736020294,0.002965776357112673,0.003758253244414134,0.004015137828886712,0.002492026669249549,0.001907091549429957,0.004140637781988654,0.003045192430570073,0.003711446304950693,0.004229613585089264,0.004771601887357074,0.003799066347515799,0.002504571168801939,0.001937889926889798,0.002477345711034552,0.003574970920289323,0.003513959179047148,0.004015799312606833,0.003658338697147481,0.00261032455418498,0.002954287304866135,0.001904503558352554,0.002549134977355511,0.002748792863435397,0.004140572993062588,0.004188123544681377,0.003626141452789841,0.002966513801679308,0.003062060036735861,0.001965814583986671,0.002876072114732341,0.004442819347684677,0.003405202177560018,0.004335938585321222,0.003777352867100783,0.002787158516311978,0.001886916736651866,0.001621372540713754,0.002954603684232335,0.0033505925272014,0.003224064001143352,0.003870353356031824,0.004316554459552118,0.003848384070256407,0.002891653928000308],[0.005373723077921613,0.007070689767153989,0.008768129539113724,0.0064810157746651,0.009390546135311281,0.01345808856372581,0.01629667994082454,0.01215709664934982,0.002974318792155907,0.004454252443251073,0.005294245994467182,0.005342654393753155,0.005005149529617449,0.004860085289810676,0.006880994571999191,0.0106789952247344,0.002550467365092554,0.00369123025701388,0.00576052067860252,0.004656487728262921,0.006086052554476638,0.005749651814960553,0.006023105781389116,0.009751980925123645,0.003163884420195302,0.004470241024698916,0.006041524319697032,0.006213961826623049,0.005523993650861063,0.005263304912381901,0.003869091480859092,0.004550523360561825,0.003117830346253572,0.003947700049633315,0.004438063955094859,0.003867070790854828,0.004157073517161572,0.005620730149467301,0.005127741737819145,0.003647347252234129,0.002086481885033617,0.004751776513460238,0.003899255070978813,0.005035990733660736,0.005756190841117574,0.00488243818403182,0.004800951023727105,0.003496599315709259,0.002110553790680494,0.00286131665520779,0.004561035618673599,0.004414203180344454,0.005746385749542228,0.005330053706905119,0.003765326897383011,0.003665199667992517,0.002235200782570876,0.00316645267175812,0.003619767726221422,0.004872630906636719,0.005365319705754819,0.004670045294404276,0.003970307863577919,0.003883884881978643,0.002318570015646659,0.003203607904869964,0.005245012061540655,0.004758789038969024,0.005221790577426625,0.004699411230176253,0.003795995825590152,0.002642704984681949,0.002262851753101102,0.003622727269989019,0.004055821551691244,0.004542950146823919,0.004684478866749844,0.00585544996318376,0.004765702377778512,0.00382093457691783],[0.006483743213521941,0.009172343047155531,0.0114092208148927,0.01153190073688017,0.01346290446941637,0.01193875689291339,0.01052067332247976,0.005042763091229496,0.004170344607948887,0.007996565321877744,0.01004207924875391,0.01022799377286772,0.01245268454551405,0.01170760503004602,0.009714945292119696,0.005601301411905458,0.004388541173467944,0.007995740931686483,0.00988403863808454,0.0130882326650867,0.01248542137889399,0.01191514338272354,0.009196151193691103,0.006392663079086224,0.004311262104134993,0.006773376355472966,0.008543987174838025,0.01297110358269414,0.0125028877856995,0.01139140488874633,0.009617149744896034,0.005961786718850684,0.004451503267714801,0.007274613894165275,0.01063589800494812,0.01294016113211864,0.01155017542308294,0.01156980508124726,0.0100963765049368,0.005465716315018818,0.003684500263901184,0.008382511430415506,0.009302924305551309,0.01178914329548751,0.01294034401604297,0.01391433057310413,0.009788664866916376,0.005725488412847519,0.003469241711621311,0.00727973946730998,0.01031156716309979,0.01151190025027714,0.01186097418770712,0.01127521259204356,0.008732703612807946,0.006342791184918723,0.003831590130329964,0.006814315039722222,0.01056644380265947,0.01159385964857558,0.01273209678774185,0.0113764022007388,0.008423003133109517,0.005915002397491549,0.004264559120753934,0.006393035446491069,0.01002159986476292,0.01155070928131665,0.01231772062537258,0.0125249699667312,0.008895569605555886,0.005537807412589342,0.003836116285740507,0.007196711174361723,0.008736072181200991,0.01280556523749514,0.01318611462301582,0.01293726457770123,0.01025711557522951,0.006279187669744626],[0.006256644603447184,0.007296436360305873,0.009461374137062962,0.008201704390478364,0.01021599695234189,0.01063119898265688,0.01596252505677474,0.01154478133241515,0.003577350696206271,0.005637576649918064,0.006205658847421564,0.006068008033521995,0.007260819297636397,0.006883191823909975,0.007927530834094426,0.006287202477839627,0.003358886831417925,0.004757516219158077,0.005988730784038786,0.006414845583193362,0.007046808522790706,0.006523848214074273,0.006891602038338713,0.006961853640498785,0.00387097016759885,0.004946189657621963,0.00532131416669913,0.006828076336086389,0.006666955031040793,0.005264707100188545,0.005299340070722421,0.00471159609976333,0.003631987895069836,0.004559361651332995,0.005120261092755041,0.004755863638827907,0.004833398701621259,0.005396578022139815,0.005447680255839467,0.003848005801974495,0.002924801894550561,0.005688363914337412,0.004554164941847537,0.005540488072481342,0.00596065007678303,0.006478421915018727,0.00513432925854236,0.003641792219361587,0.002846043576507604,0.003911367109176728,0.00524172700302376,0.005241148558722779,0.005425761204289032,0.005316053460720279,0.003858318268560302,0.004337282646821413,0.002969178135309095,0.003667469517890746,0.00429722993776051,0.005715771044798465,0.005786496110903634,0.005112684303272171,0.004508805728238692,0.004016880041245592,0.003076370060279671,0.004185352569811627,0.006202781264113731,0.004875197494379639,0.005751641432963472,0.005358591807178543,0.003825018503748103,0.00272994190328549,0.002542597850209681,0.004283732508862435,0.004693537538666631,0.005216432125707895,0.005499104493826872,0.005743951624824595,0.005041521555597097,0.004190419310845084],[0.006787925206078921,0.009343156783729397,0.01149960612222002,0.009633118660525649,0.01260380383221123,0.01642419186604112,0.02060495133093136,0.01552220364614527,0.004101593334397561,0.006350621446363362,0.007689192184068882,0.007461540629375376,0.007753165528350061,0.007449549049304859,0.009243355705979943,0.01220634170204053,0.003866841584190469,0.005695147490189301,0.007803264854695647,0.007143061858271522,0.008995937480882701,0.008709156108675249,0.008067808155182012,0.01163286349364249,0.004476964146764489,0.00627008225790344,0.007663621570833935,0.008385208522167582,0.008169272311365961,0.007731017203232464,0.006209008623472564,0.006360433341081815,0.004483445856388199,0.005519045035381825,0.006648533101802995,0.006195407578552915,0.006394879737845294,0.007734256416187969,0.006985627025148955,0.005368001804097475,0.003417286600356082,0.006780192771004339,0.005799188365887803,0.007508135681002309,0.008115825929553334,0.007233498200518189,0.006342119499222816,0.004826631489571457,0.003336612399553543,0.004907838535288477,0.006698983785172175,0.006562108074260414,0.007528082698105813,0.007409577283273985,0.005512557524627798,0.005452052657171408,0.003582625520021345,0.004804566976853532,0.005736172240753908,0.006962323962695541,0.007628242827224623,0.006521106957439216,0.006013686422350366,0.005155727041597623,0.00381608017006678,0.004929697128315253,0.00771336098396677,0.006676135189343133,0.007186242393156454,0.006672218243050895,0.005386803845178427,0.003837595978239918,0.003422038312925171,0.005469947205518126,0.00593295173422562,0.007352685783528781,0.007050335348643513,0.007793367737444461,0.006222096525471351,0.005352295202462879]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th>n_obs<\\/th>\\n      <th>cens_prop<\\/th>\\n      <th>km_cor<\\/th>\\n      <th>cox_cor<\\/th>\\n      <th>aft_cor<\\/th>\\n      <th>km_diff_mean<\\/th>\\n      <th>cox_diff_mean<\\/th>\\n      <th>aft_diff_mean<\\/th>\\n      <th>km_diff_sd<\\/th>\\n      <th>cox_diff_sd<\\/th>\\n      <th>aft_diff_sd<\\/th>\\n      <th>km_rmse<\\/th>\\n      <th>cox_rmse<\\/th>\\n      <th>aft_rmse<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":10,\"searching\":true,\"columnDefs\":[{\"targets\":1,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 1, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":2,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":3,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":4,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":5,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 3, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":6,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 3, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":7,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 3, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":8,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 3, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":9,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 3, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":10,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 3, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":11,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 3, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":12,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 3, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":13,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 3, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"className\":\"dt-right\",\"targets\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13]},{\"name\":\"n_obs\",\"targets\":0},{\"name\":\"cens_prop\",\"targets\":1},{\"name\":\"km_cor\",\"targets\":2},{\"name\":\"cox_cor\",\"targets\":3},{\"name\":\"aft_cor\",\"targets\":4},{\"name\":\"km_diff_mean\",\"targets\":5},{\"name\":\"cox_diff_mean\",\"targets\":6},{\"name\":\"aft_diff_mean\",\"targets\":7},{\"name\":\"km_diff_sd\",\"targets\":8},{\"name\":\"cox_diff_sd\",\"targets\":9},{\"name\":\"aft_diff_sd\",\"targets\":10},{\"name\":\"km_rmse\",\"targets\":11},{\"name\":\"cox_rmse\",\"targets\":12},{\"name\":\"aft_rmse\",\"targets\":13}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[\"options.columnDefs.0.render\",\"options.columnDefs.1.render\",\"options.columnDefs.2.render\",\"options.columnDefs.3.render\",\"options.columnDefs.4.render\",\"options.columnDefs.5.render\",\"options.columnDefs.6.render\",\"options.columnDefs.7.render\",\"options.columnDefs.8.render\",\"options.columnDefs.9.render\",\"options.columnDefs.10.render\",\"options.columnDefs.11.render\",\"options.columnDefs.12.render\"],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\nVisualizing the RMSE between RISBS and ISBS:\n\n::: {.panel-tabset}\n#### Cox\n\n::: {.cell}\n\n```{.r .cell-code}\ncox_mat = \n  res_noph_dep |> \n  select(n_obs, cens_prop, cox_rmse) |> \n  pivot_wider(names_from = cens_prop, values_from = cox_rmse) |> \n  arrange(desc(n_obs)) |>\n  column_to_rownames(var = \"n_obs\") |> \n  as.matrix()\n\n# color function\nmax_val = round(max(c(res_noph_dep$km_rmse, res_noph_dep$cox_rmse, res_noph_dep$aft_rmse)), digits = 3) + 0.001\ncol_fun = circlize::colorRamp2(c(0, max_val/2, max_val), c(\"#e0f3db\", \"#a8ddb5\", \"#43a2ca\"))\n\nHeatmap(cox_mat, name = \"RMSE\", cluster_rows = FALSE, cluster_columns = FALSE,\n        column_title = \"Censoring Proportion\", column_title_side = \"bottom\",\n        column_labels = paste0(seq(from = 10, to = 80, by = 10), \"%\"),\n        column_names_rot = 0, column_names_centered = TRUE, col = col_fun,\n        row_names_side = \"left\", row_title = \"#Observations\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n#### AFT\n\n::: {.cell}\n\n```{.r .cell-code}\naft_mat = \n  res_noph_dep |> \n  select(n_obs, cens_prop, aft_rmse) |> \n  pivot_wider(names_from = cens_prop, values_from = aft_rmse) |> \n  arrange(desc(n_obs)) |>\n  column_to_rownames(var = \"n_obs\") |> \n  as.matrix()\n\nHeatmap(aft_mat, name = \"RMSE\", cluster_rows = FALSE, cluster_columns = FALSE,\n        column_title = \"Censoring Proportion\", column_title_side = \"bottom\",\n        column_labels = paste0(seq(from = 10, to = 80, by = 10), \"%\"),\n        column_names_rot = 0, column_names_centered = TRUE, col = col_fun,\n        row_names_side = \"left\", row_title = \"#Observations\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n#### Kaplan-Meier\n\n::: {.cell}\n\n```{.r .cell-code}\nkm_mat = \n  res_noph_dep |> \n  select(n_obs, cens_prop, km_rmse) |> \n  pivot_wider(names_from = cens_prop, values_from = km_rmse) |> \n  arrange(desc(n_obs)) |>\n  column_to_rownames(var = \"n_obs\") |> \n  as.matrix()\n\nHeatmap(km_mat, name = \"RMSE\", cluster_rows = FALSE, cluster_columns = FALSE,\n        column_title = \"Censoring Proportion\", column_title_side = \"bottom\",\n        column_labels = paste0(seq(from = 10, to = 80, by = 10), \"%\"),\n        column_names_rot = 0, column_names_centered = TRUE, col = col_fun,\n        row_names_side = \"left\", row_title = \"#Observations\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n:::\n\n## Real-world Data Results {-}\n\n:::{.callout-note}\n- [Compressed data files](https://github.com/survival-org/scoring-rules-2024/tree/main/data)\n- [R script](https://github.com/survival-org/scoring-rules-2024/blob/main/prepare_tasks.R) used to translate the datasets into `mlr3` tasks and extract useful info, namely:\n  - `n_obs`: Number of observations\n  - `n_vars`: Number of total variables\n  - `n_factors`: Number of factor/categorical variables\n  - `n_numeric`: Number of numeric variables\n  - `cens_prop`: Proportion of censoring\n  - `admin_cens_prop`: Proportion of censored observations that are censored administratively, i.e. at the last censoring time\n  - `dep_cens_prop`: Proportion of significant coefficients (adjusted `p < 0.05`) to predict censoring status using a logistic regression model\n  - `prop_haz`: If the dataset satisfies the proportional hazards assumption (`p > 0.05` using the Grambsch-Therneau test [@Grambsch1994])\n- [R script](https://github.com/survival-org/scoring-rules-2024/blob/main/run_bench.R) used to run the benchmark\n:::\n\n### Introduction {-}\n\nWe used a total of $26$ real-word, low-dimensional datasets (fewer features than observations) for benchmarking, some of which are freely available via various `R` packages.\nFor each dataset, we performed a simple train/test resampling (80%/20%) $100$ times.\nEach resampling was stratified using the `status` variable so that the proportion of censoring remains the same in each respective train and test set.\n\nWe trained 3 models in each respective train set, namely the **Kaplan-Meier**, the **Cox Proportional Hazards** (CoxPH) model and an **Accelerated Failure Time** (AFT) model with Weibull distribution for the time-to-event output variable.\nWe tested the performance of each model in each respective test set using the **ISBS** and **RISBS** measures, integrating up to the $80\\%$ quantile of the event times of each train set.\nWe kept also the brier scores for each specific observation (*observation-wise* scores) in all respective test sets.\n\n### Datasets table {-}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# task info, see `prepare_tasks.R`\ntask_tbl = readRDS(file = \"task_tbl.rds\")\n\ntask_tbl |> \n  select(-task) |>\n  datatable(\n    rownames = FALSE, \n    options = list(pageLength = 13, searching = TRUE,\n                   order = list(list(0, 'asc')))) |>\n    formatRound(columns = 6:8, digits = 2) |>\n    formatStyle(columns = 'prop_haz',\n                backgroundColor = styleEqual(c(TRUE, FALSE), c(\"#4DAF4A\", \"#E41A1C\")))\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-49676df256eaaecb007f\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-49676df256eaaecb007f\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"aids.id\",\"aids2\",\"channing\",\"colrec\",\"cost\",\"dataFTR\",\"dataSTR\",\"e1684\",\"gbsg\",\"grace\",\"kidtran\",\"liver\",\"lung\",\"metabric\",\"mgus\",\"nafld1\",\"nwtco\",\"ova\",\"rdata\",\"std\",\"support\",\"tumor\",\"uis\",\"veteran\",\"wbc1\",\"whas\"],[467,2814,458,5578,518,2206,546,284,2232,1000,863,488,228,1903,176,4000,4028,358,1040,877,4000,776,575,137,190,481],[5,4,2,5,13,2,4,3,7,6,3,2,8,9,7,5,3,5,3,21,14,7,12,6,2,9],[4,2,0,2,10,0,0,0,0,0,0,0,1,0,1,1,1,3,1,4,0,1,1,3,0,2],[1,2,2,3,3,2,4,3,7,6,3,2,7,9,6,4,2,2,2,17,14,6,11,3,2,7],[0.5974304068522484,0.3841506751954513,0.6157205240174672,0.17497310864109,0.2200772200772201,0.8640072529465095,0.815018315018315,0.3098591549295774,0.432347670250896,0.676,0.8377752027809965,0.4016393442622951,0.2763157894736842,0.4203888596952181,0.0625,0.9195,0.8582423038728898,0.2569832402234637,0.4740384615384615,0.6043329532497149,0.32375,0.5167525773195877,0.1930434782608696,0.06569343065693431,0.4263157894736842,0.4823284823284824],[0.003584229390681004,0.0009250693802035153,0.4397163120567376,0.001024590163934426,0.008771929824561403,0.001049317943336831,0.002247191011235955,0.01136363636363636,0.001036269430051813,0.7248520710059172,0.001383125864453665,0.00510204081632653,0.01587301587301587,0.00125,0.09090909090909091,0.0002718868950516585,0.0002892681515765114,0.0108695652173913,0.002028397565922921,0.001886792452830189,0.002316602316602316,0.002493765586034913,0.009009009009009009,0.1111111111111111,0.01234567901234568,0.004310344827586207],[0.3333333333333333,0,0.6666666666666666,0.8333333333333334,0.1428571428571428,0.6666666666666666,0.6,0.25,0.5,0.7142857142857143,0.5,0.6666666666666666,0.1111111111111111,0.6,0.125,0.3333333333333333,1,0.07692307692307693,0.5714285714285714,0,0.2666666666666667,0.3076923076923077,0.06666666666666667,0,0,0.4666666666666667],[true,false,true,false,false,true,true,true,false,false,true,false,true,false,true,true,false,false,true,true,false,false,true,false,true,false]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th>task_id<\\/th>\\n      <th>n_obs<\\/th>\\n      <th>n_vars<\\/th>\\n      <th>n_factors<\\/th>\\n      <th>n_numeric<\\/th>\\n      <th>cens_prop<\\/th>\\n      <th>admin_cens_prop<\\/th>\\n      <th>dep_cens_prop<\\/th>\\n      <th>prop_haz<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":13,\"searching\":true,\"order\":[[0,\"asc\"]],\"columnDefs\":[{\"targets\":5,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":6,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":7,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"className\":\"dt-right\",\"targets\":[1,2,3,4,5,6,7]},{\"name\":\"task_id\",\"targets\":0},{\"name\":\"n_obs\",\"targets\":1},{\"name\":\"n_vars\",\"targets\":2},{\"name\":\"n_factors\",\"targets\":3},{\"name\":\"n_numeric\",\"targets\":4},{\"name\":\"cens_prop\",\"targets\":5},{\"name\":\"admin_cens_prop\",\"targets\":6},{\"name\":\"dep_cens_prop\",\"targets\":7},{\"name\":\"prop_haz\",\"targets\":8}],\"autoWidth\":false,\"orderClasses\":false,\"lengthMenu\":[10,13,25,50,100],\"rowCallback\":\"function(row, data, displayNum, displayIndex, dataIndex) {\\nvar value=data[8]; $(this.api().cell(row, 8).node()).css({'background-color':value == true ? \\\"#4DAF4A\\\" : value == false ? \\\"#E41A1C\\\" : null});\\n}\"}},\"evals\":[\"options.columnDefs.0.render\",\"options.columnDefs.1.render\",\"options.columnDefs.2.render\",\"options.rowCallback\"],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n### Benchmarking stats {-}\n\nGet the benchmark results:\n\n::: {.cell}\n\n```{.r .cell-code}\n# see `run_bench.R`\n# Compressed file: https://github.com/survival-org/scoring-rules-2024/blob/main/bench_res.rds\nbench_res = readRDS(file = \"bench_res.rds\")\n```\n:::\n\n\nWe calculate the **Pearson correlation** and **root mean square error (RMSE)** between RISBS and ISBS scores per dataset ($100$ resamplings) and model:\n\n::: {.cell}\n\n```{.r .cell-code}\nscore_corrs = \n  bench_res |> \n  group_by(task_id) |> \n  select(ends_with(\"proper\")) |> \n  summarize(\n    km_cor  = cor(km_proper, km_improper),\n    cox_cor = cor(cox_proper, cox_improper),\n    aft_cor = cor(aft_proper, aft_improper),\n    km_rmse  = sqrt(mean((km_proper - km_improper)^2)),\n    cox_rmse = sqrt(mean((cox_proper - cox_improper)^2)),\n    aft_rmse = sqrt(mean((aft_proper - aft_improper)^2))\n  ) |> \n  arrange(desc(cox_cor))\n\nscore_corrs |>\n  datatable(\n    rownames = FALSE,\n    options = list(pageLength = 13, searching = TRUE, order = list(list(2, 'desc')))\n  ) |>\n  formatRound(columns = 2:7, digits = 3)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-48f5f56a563e007b1938\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-48f5f56a563e007b1938\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"cost\",\"mgus\",\"ova\",\"uis\",\"colrec\",\"grace\",\"nwtco\",\"dataFTR\",\"channing\",\"kidtran\",\"aids.id\",\"rdata\",\"wbc1\",\"e1684\",\"gbsg\",\"dataSTR\",\"metabric\",\"nafld1\",\"liver\",\"lung\",\"std\",\"veteran\",\"whas\",\"tumor\",\"aids2\",\"support\"],[1,0.9999999999999999,1,1,0.9999911925011142,0.9996850818291312,0.9999776289511731,0.9992240819066495,0.9963887304493455,0.9995120362720006,0.9992356185106409,0.997893082385733,0.9953579765949976,0.9874342464757688,0.9920589725565674,0.9928308959687651,0.9832905303501287,0.999840736818331,0.961259178299209,0.9578955951673479,0.9650767593615264,0.9479066635335457,0.9616893347536847,0.9798367166688503,0.8758289671652648,0.5501651426954823],[1,1,1,1,0.9999997920702467,0.9998957713373687,0.9996178743556782,0.9987054833247618,0.9974691409999067,0.9968458130530483,0.9965125148264731,0.9952071886614481,0.9901513894688344,0.990014652838489,0.9889809870910098,0.9820933012092952,0.9799541837535042,0.9766240182709197,0.9683441285149659,0.9501229781362157,0.9470563626322416,0.9410461286262014,0.9391126069363087,0.9352292313895469,0.8695719299689061,0.8530764029299597],[0.9999999999999998,1,0.9999999992411213,1,0.9999998326737253,0.9999165583313302,0.999859015079287,0.997916632646661,0.9972994639894507,0.9966212188955218,0.9964306086573956,0.9943356498934092,0.9927548603298052,0.9966768460221932,0.9925817519892476,0.9646447750531115,0.9810374857898373,0.971610238750237,0.9663438785223293,0.9499152596439241,0.9408180329984862,0.9487879844521035,0.9376744514946737,0.9195840325999618,0.841742369495088,0.9025906425662827],[0,0,0,0,5.902813606409192e-06,0.0008619750624468905,0.001217760616566464,0.003397506461294953,0.004592255161147991,0.003495415805402339,0.005249433141573942,0.003950913606069886,0.0103041025341517,0.00289200664657193,0.005923527275201003,0.007381331206507278,0.01240232182697936,0.001093733468759876,0.007876296408378556,0.01004677173289786,0.01404913613948708,0.007615747429238389,0.02204862369598485,0.01483227535002656,0.01152635051595783,0.0326815749012969],[0,0,0,0,2.653544363212222e-06,0.0008014115126252792,0.001396584333052252,0.003731378949684477,0.003016082738877626,0.004791206936979415,0.006379370223700836,0.004582320861034945,0.01110670725892149,0.002844108707054534,0.005377704694535454,0.008381413505633437,0.0113633526211011,0.002821281560182274,0.006694706122350432,0.006987556856065415,0.01463553891346589,0.009211984560830997,0.01575722266973721,0.01625633503181527,0.0114232491010985,0.0301794996811199],[0,0,6.996858325335e-07,0,2.424078383138376e-06,0.000734475467275644,0.000828900144037484,0.004821547831685662,0.003087260510169378,0.004720845990889497,0.006442715253108498,0.004810251650244748,0.009742251262576097,0.001975321121457598,0.004377898839195325,0.01135752638968938,0.01086145392230224,0.003178911502189756,0.006643163931717929,0.007061606874001685,0.0149777140785899,0.008838705375982569,0.01488967841601764,0.01705611943276716,0.01256893995345923,0.02691224216343811]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th>task_id<\\/th>\\n      <th>km_cor<\\/th>\\n      <th>cox_cor<\\/th>\\n      <th>aft_cor<\\/th>\\n      <th>km_rmse<\\/th>\\n      <th>cox_rmse<\\/th>\\n      <th>aft_rmse<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":13,\"searching\":true,\"order\":[[2,\"desc\"]],\"columnDefs\":[{\"targets\":1,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 3, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":2,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 3, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":3,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 3, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":4,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 3, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":5,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 3, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":6,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 3, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"className\":\"dt-right\",\"targets\":[1,2,3,4,5,6]},{\"name\":\"task_id\",\"targets\":0},{\"name\":\"km_cor\",\"targets\":1},{\"name\":\"cox_cor\",\"targets\":2},{\"name\":\"aft_cor\",\"targets\":3},{\"name\":\"km_rmse\",\"targets\":4},{\"name\":\"cox_rmse\",\"targets\":5},{\"name\":\"aft_rmse\",\"targets\":6}],\"autoWidth\":false,\"orderClasses\":false,\"lengthMenu\":[10,13,25,50,100]}},\"evals\":[\"options.columnDefs.0.render\",\"options.columnDefs.1.render\",\"options.columnDefs.2.render\",\"options.columnDefs.3.render\",\"options.columnDefs.4.render\",\"options.columnDefs.5.render\"],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\nMean and standard deviation of the Pearson's correlation and RMSE across all datasets:\n\n::: {.cell}\n\n```{.r .cell-code}\nscore_corrs |>\n  summarise(across(-task_id, list(mean = mean, sd = sd))) |> \n  pivot_longer(cols = everything(), \n               names_to = c(\"model\", \"statistic\", \".value\"), \n               names_pattern = \"(.*)_(.*)_(.*)\"\n  ) |>\n  knitr::kable(digits = 3)\n```\n\n::: {.cell-output-display}\n|model |statistic |  mean|    sd|\n|:-----|:---------|-----:|-----:|\n|km    |cor       | 0.967| 0.089|\n|cox   |cor       | 0.973| 0.039|\n|aft   |cor       | 0.973| 0.039|\n|km    |rmse      | 0.007| 0.008|\n|cox   |rmse      | 0.007| 0.007|\n|aft   |rmse      | 0.007| 0.007|\n:::\n:::\n\n\n### RISBS vs ISBS {-}\n\nScatter plots of RISBS vs ISBS scores per dataset ($100$ dots/resamplings per figure).\nWe add the regression line in each plot.\nDatasets are ordered by decreasing correlation between the two metrics:\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-23_dd1a0c7063015aae99a2f09cd2c5fc02'}\n\n```{.r .cell-code}\n# order is by decreasing correlation\nfor (id in score_corrs$task_id) {\n  p = \n    bench_res |>\n    filter(task_id == id) |>\n    select(ends_with(\"proper\")) |>\n    pivot_longer(cols = everything(), names_to = c(\"model\", \".value\"), names_pattern = \"(.*)_(.*)\") |>\n    mutate(model = factor(model, levels = c(\"km\", \"cox\", \"aft\"))) |>\n    # scatter plot with Pearson's coef.\n    ggpubr::ggscatter(\n      x = \"proper\", y = \"improper\",\n      facet.by = c(\"model\"),\n      panel.labs = list(model = c(\"Kaplan-Meier\", \"CoxPH\", \"AFT (Weibull)\")),\n      xlab = \"RISBS (proper)\",\n      ylab = \"ISBS (improper)\",\n      color = \"black\", shape = 21, size = 2,\n      add = \"reg.line\",  # Add regression line\n      add.params = list(color = \"blue\", fill = \"lightgray\"), # Customize regr. line\n      conf.int = TRUE, # Add confidence interval\n      cor.coef = TRUE, # Add Pearson's correlation coefficient\n      cor.coeff.args = list(method = \"pearson\", label.sep = \"\\n\")\n    ) +\n    labs(title = id) +\n    theme(panel.spacing = unit(1, \"cm\"))\n  print(p)\n}\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-23-1.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-23-2.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-23-3.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-23-4.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-23-5.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-23-6.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-23-7.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-23-8.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-23-9.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-23-10.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-23-11.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-23-12.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-23-13.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-23-14.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-23-15.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-23-16.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-23-17.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-23-18.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-23-19.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-23-20.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-23-21.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-23-22.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-23-23.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-23-24.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-23-25.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-23-26.png){width=768}\n:::\n:::\n\n\n### RISBS vs ISBS (observation-wise scores) {-}\n\nScatter plots of RISBS vs ISBS *observation-wise* scores per dataset.\nEvery figure has a total of dots equal to ($100$ resamplings) x (number of test observations in each resampling).\nWe draw the reference $y = x$ line in each plot.\nDatasets are ordered by *decreasing proportion of censoring* after applying the $80\\%$ quantile `t_max` cutoff in each full dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncens_props = vapply(task_tbl$task, function(task) {\n  event_times = task$unique_event_times()\n  t_max = unname(quantile(event_times, probs = 0.8))\n  truth = task$truth()\n  times  = truth[, 1]\n  status = truth[, 2]\n  status_tmax = status[times <= t_max]\n  sum(status_tmax == 0)/length(status_tmax) # censoring proportion\n}, numeric(1))\n\nnames(cens_props) = task_tbl$task_id\n```\n:::\n\n::: {.cell hash='index_cache/html/unnamed-chunk-25_93d3b03cfccc4a4742300e2be03f3af3'}\n\n```{.r .cell-code}\nids = names(sort(cens_props, decreasing = TRUE))\n\nfor (id in ids) {\n  p = \n    bench_res |>\n    filter(task_id == id) |>\n    select(ends_with(\"scores\"), test_status) |> # `test_status` is the censoring status for coloring\n    unnest(cols = everything()) |>\n    pivot_longer(cols = ends_with(\"scores\"), names_to = c(\"model\", \"type\", \".value\"), names_pattern = \"(.*)_(.*)_(.*)\") |>\n    pivot_wider(names_from = type, values_from = scores, values_fn = list) |> \n    unnest(cols = everything()) |>\n    rename(Status = test_status) |>\n    mutate(Status = case_when(Status == 0 ~ \"Censored\", TRUE ~ \"Event\")) |>\n    mutate(\n      Status = as.factor(Status),\n      model = factor(model, levels = c(\"km\", \"cox\", \"aft\"))\n    ) |>\n    # scatter plot with Pearson's coef.\n    ggpubr::ggscatter(\n      x = \"proper\", y = \"improper\",\n      facet.by = c(\"model\"),\n      panel.labs = list(model = c(\"Kaplan-Meier\", \"CoxPH\", \"AFT (Weibull)\")),\n      xlab = \"RISBS (proper)\",\n      ylab = \"ISBS (improper)\",\n      color = \"Status\", shape = 21, size = 2, alpha = 0.8,\n      palette = c(\"Censored\" = \"#377eb8\", \"Event\" = \"#e41a1c\"),\n      cor.coef = TRUE, # Add Pearson's correlation coefficient\n      cor.coeff.args = list(method = \"pearson\", label.sep = \"\\n\")\n    ) +\n    labs(title = id) +\n    geom_abline(slope = 1, size = 0.8) +\n    theme(panel.spacing = unit(1, \"cm\"))\n  print(p)\n}\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-25-1.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-25-2.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-25-3.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-25-4.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-25-5.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-25-6.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-25-7.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-25-8.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-25-9.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-25-10.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-25-11.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-25-12.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-25-13.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-25-14.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-25-15.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-25-16.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-25-17.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-25-18.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-25-19.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-25-20.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-25-21.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-25-22.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-25-23.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-25-24.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-25-25.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-25-26.png){width=768}\n:::\n:::\n\n\nNote that in the 4 last datasets we have censored observations with $t > t_{max}$ so they are excluded from the calculation of the brier scores as we integrate up to the `t_max` time horizon cutoff.\nTherefore only observations that have experienced the event contribute to the scores (but the estimation of the censoring distribution using the Kaplan-Meier uses all observations of a train set).\n\n### Figures for paper {-}\n\nResults only for the cox model and two datasets:\n\n::: {.panel-tabset}\n\n#### VETERAN\n\n::: {.cell}\n\n```{.r .cell-code}\n# RISBS vs ISBS\nscores = \n  bench_res |>\n  filter(task_id == \"veteran\") |> \n  select(cox_proper, cox_improper) # 100 resamplings\nRMSE = sqrt(mean((scores$cox_proper - scores$cox_improper)^2))\nmean(abs(scores$cox_proper - scores$cox_improper))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.006368727\n```\n:::\n\n```{.r .cell-code}\nsd(abs(scores$cox_proper - scores$cox_improper))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.006689354\n```\n:::\n\n```{.r .cell-code}\np1 = ggpubr::ggscatter(data = scores, x = \"cox_proper\", y = \"cox_improper\",\n  xlab = \"RISBS (proper)\", ylab = \"ISBS (improper)\",\n  shape = 21, size = 2, alpha = 0.8,\n  add = \"reg.line\",  # Add regression line\n  add.params = list(color = \"blue\", fill = \"lightgray\"), # Customize regr. line\n  conf.int = TRUE, # Add confidence interval\n  cor.coef = TRUE, # Add Pearson's correlation coefficient\n  cor.coef.size = 8,\n  cor.coeff.args = list(method = \"pearson\", label.sep = \"\\n\"), \n  ggtheme = theme_classic(base_size = 18)\n) +\nlabs(title = \"VETERAN\") +\ntheme(plot.title = element_text(hjust = 0.5)) +\nannotate(\"text\", size = 8, x = 0.175, y = 0.12, hjust = 0,\n          label = paste0(\"RMSE = \", round(RMSE, digits = 3)))\np1\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# ggsave(filename = \"p1.pdf\", width = 7, height = 5)\n\n# per observation scores\nobs_scores = \n  bench_res |>\n  filter(task_id == \"veteran\") |>\n  select(cox_proper_scores, cox_improper_scores, test_status) |> # `test_status` is the censoring status for coloring\n  rename(proper_scores = cox_proper_scores, improper_scores = cox_improper_scores) |>\n  unnest(cols = everything()) |>\n  pivot_longer(cols = ends_with(\"scores\"), names_to = c(\"type\", \".value\"), names_pattern = \"(.*)_(.*)\") |>\n  pivot_wider(names_from = type, values_from = scores, values_fn = list) |> \n  unnest(cols = everything()) |>\n  rename(Status = test_status) |>\n  mutate(Status = as.factor(case_when(Status == 0 ~ \"Censored\", TRUE ~ \"Event\")))\n\n# 18 - 28 test observations after `t_max` cutoff per resampling (28 is 137 * 20%)\nstatus = bench_res |> filter(task_id == \"veteran\") |> pull(test_status)\nmap(status, length) |> unlist() |> summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  18.00   21.00   23.00   23.23   25.00   28.00 \n```\n:::\n\n```{.r .cell-code}\n# truth: 2143 events, 180 censored\nobs_scores$Status |> table()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCensored    Event \n     180     2143 \n```\n:::\n\n```{.r .cell-code}\nRMSE_all = sqrt(mean((obs_scores$proper - obs_scores$improper)^2))\nRMSE_event = sqrt(mean((\n  obs_scores |> filter(Status == \"Event\") |> pull(proper) - \n  obs_scores |> filter(Status == \"Event\") |> pull(improper))^2))\nRMSE_cens = sqrt(mean((\n  obs_scores |> filter(Status == \"Censored\") |> pull(proper) - \n  obs_scores |> filter(Status == \"Censored\") |> pull(improper))^2))\n\np2 = ggpubr::ggscatter(data = obs_scores, x = \"proper\", y = \"improper\",\n  xlab = \"RISBS (proper)\", ylab = \"ISBS (improper)\",\n  color = \"Status\", shape = 21, size = 3, alpha = 0.8,\n  palette = c(\"Censored\" = \"#377eb8\", \"Event\" = \"#e41a1c\"),\n  cor.coef = TRUE, # Add Pearson's correlation coefficient\n  cor.coef.size = 8,\n  cor.coeff.args = list(method = \"pearson\"),\n  ggtheme = theme_classic(base_size = 18)\n) +\nlabs(title = \"VETERAN\") +\ntheme(legend.position = \"none\") +\ngeom_abline(slope = 1, size = 0.8) +\ntheme(plot.title = element_text(hjust = 0.5)) +\nannotate(\"text\", size = 6, x = 0.35, y = c(0.25, 0.2, 0.15), hjust = 0,\n          label = c(paste0(\"RMSE (all) = \", round(RMSE_all, digits = 3)), \n                    paste0(\"RMSE (Event) = \", round(RMSE_event, digits = 3)),\n                    paste0(\"RMSE (Censored) = \", round(RMSE_cens, digits = 3))))\np2\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-26-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# ggsave(filename = \"p2.pdf\", width = 7, height = 5)\n```\n:::\n\n\n#### NAFLD\n\n::: {.cell}\n\n```{.r .cell-code}\n# RISBS vs ISBS\nscores = \n  bench_res |>\n  filter(task_id == \"nafld1\") |> \n  select(cox_proper, cox_improper) # 100 resamplings\nRMSE = sqrt(mean((scores$cox_proper - scores$cox_improper)^2))\nmean(abs(scores$cox_proper - scores$cox_improper))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.002702623\n```\n:::\n\n```{.r .cell-code}\nsd(abs(scores$cox_proper - scores$cox_improper))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.0008136839\n```\n:::\n\n```{.r .cell-code}\np3 = ggpubr::ggscatter(data = scores, x = \"cox_proper\", y = \"cox_improper\",\n  xlab = \"RISBS (proper)\", ylab = \"ISBS (improper)\",\n  shape = 21, size = 2, alpha = 0.8,\n  add = \"reg.line\",  # Add regression line\n  add.params = list(color = \"blue\", fill = \"lightgray\"), # Customize regr. line\n  conf.int = TRUE, # Add confidence interval\n  cor.coef = TRUE, # Add Pearson's correlation coefficient\n  cor.coef.size = 8,\n  cor.coeff.args = list(method = \"pearson\", label.sep = \"\\n\"), \n  ggtheme = theme_classic(base_size = 18)\n) +\nlabs(title = \"NAFLD\") +\ntheme(plot.title = element_text(hjust = 0.5)) +\nannotate(\"text\", size = 8, x = 0.044, y = 0.04, hjust = 0,\n          label = paste0(\"RMSE = \", round(RMSE, digits = 3)))\np3\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# ggsave(filename = \"p3.pdf\", width = 7, height = 5)\n  \n# per observation scores\nobs_scores = \n  bench_res |>\n  filter(task_id == \"nafld1\") |>\n  select(cox_proper_scores, cox_improper_scores, test_status) |> # `test_status` is the censoring status for coloring\n  rename(proper_scores = cox_proper_scores, improper_scores = cox_improper_scores) |>\n  unnest(cols = everything()) |>\n  pivot_longer(cols = ends_with(\"scores\"), names_to = c(\"type\", \".value\"), names_pattern = \"(.*)_(.*)\") |>\n  pivot_wider(names_from = type, values_from = scores, values_fn = list) |> \n  unnest(cols = everything()) |>\n  rename(Status = test_status) |>\n  mutate(Status = as.factor(case_when(Status == 0 ~ \"Censored\", TRUE ~ \"Event\")))\n\n# 509 - 597 test observations after `t_max` cutoff per resampling (it should \n# have been 800 = 4000 * 20%, so now we got less observations contributing to \n# the scores and given 92% censoring, we know that most of these are censored obs :)\nstatus = bench_res |> filter(task_id == \"nafld1\") |> pull(test_status)\nmap(status, length) |> unlist() |> summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  509.0   541.0   556.5   553.8   566.2   597.0 \n```\n:::\n\n```{.r .cell-code}\n# truth: 5181 events, 50194 censored\nobs_scores$Status |> table()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCensored    Event \n   50194     5181 \n```\n:::\n\n```{.r .cell-code}\nRMSE_all = sqrt(mean((obs_scores$proper - obs_scores$improper)^2))\nRMSE_event = sqrt(mean((\n  obs_scores |> filter(Status == \"Event\") |> pull(proper) - \n  obs_scores |> filter(Status == \"Event\") |> pull(improper))^2))\nRMSE_cens = sqrt(mean((\n  obs_scores |> filter(Status == \"Censored\") |> pull(proper) - \n  obs_scores |> filter(Status == \"Censored\") |> pull(improper))^2))\n\np4 = ggpubr::ggscatter(data = obs_scores, x = \"proper\", y = \"improper\",\n  xlab = \"RISBS (proper)\", ylab = \"ISBS (improper)\",\n  color = \"Status\", shape = 21, size = 3, alpha = 0.8,\n  palette = c(\"Censored\" = \"#377eb8\", \"Event\" = \"#e41a1c\"),\n  cor.coef = TRUE, # Add Pearson's correlation coefficient\n  cor.coef.size = 8,\n  cor.coeff.args = list(method = \"pearson\"),\n  ggtheme = theme_classic(base_size = 18)\n) +\nlabs(title = \"NAFLD\") +\ngeom_abline(slope = 1, size = 0.8) +\ntheme(plot.title = element_text(hjust = 0.5)) +\nannotate(\"text\", size = 5, x = 0.4, y = c(0.22, 0.16, 0.10), hjust = 0,\n          label = c(paste0(\"RMSE (all) = \", round(RMSE_all, digits = 3)), \n                    paste0(\"RMSE (Event) = \", round(RMSE_event, digits = 3)),\n                    paste0(\"RMSE (Censored) = \", round(RMSE_cens, digits = 3))))\np4\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-27-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# ggsave(filename = \"p4.pdf\", width = 7, height = 5)\n```\n:::\n\n:::\n\n## References\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/datatables-binding-0.33/datatables.js\"></script>\n<script src=\"site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"site_libs/dt-core-1.13.6/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"site_libs/dt-core-1.13.6/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/dt-core-1.13.6/js/jquery.dataTables.min.js\"></script>\n<link href=\"site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}